import json
from typing import List, Any, Optional
from fastapi import UploadFile
default_state = json.loads('{"Flex2":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex3":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex4":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox1":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox2":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Button1":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"Menu1":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"open":true,"iconHeight":24,"iconWidth":24,"src":"","strokeColor":"","gap":0,"alignRight":false}},"TextBox4":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox5":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex5":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex6":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex7":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex9":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Image1":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox6":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox7":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox8":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex10":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Button2":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"TextBox9":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex11":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}}}')
def get_defined_value(state, def_state, key):
	return state[key] if key in state else def_state[key]
class Atri:
	def __init__(self, state: Any):
		self.event_data = None
		global default_state
		self.Flex2 = self.__Flex2Class(state["Flex2"], default_state["Flex2"])
		self.Flex3 = self.__Flex3Class(state["Flex3"], default_state["Flex3"])
		self.Flex4 = self.__Flex4Class(state["Flex4"], default_state["Flex4"])
		self.TextBox1 = self.__TextBox1Class(state["TextBox1"], default_state["TextBox1"])
		self.TextBox2 = self.__TextBox2Class(state["TextBox2"], default_state["TextBox2"])
		self.Button1 = self.__Button1Class(state["Button1"], default_state["Button1"])
		self.Menu1 = self.__Menu1Class(state["Menu1"], default_state["Menu1"])
		self.TextBox4 = self.__TextBox4Class(state["TextBox4"], default_state["TextBox4"])
		self.TextBox5 = self.__TextBox5Class(state["TextBox5"], default_state["TextBox5"])
		self.Flex5 = self.__Flex5Class(state["Flex5"], default_state["Flex5"])
		self.Flex6 = self.__Flex6Class(state["Flex6"], default_state["Flex6"])
		self.Flex7 = self.__Flex7Class(state["Flex7"], default_state["Flex7"])
		self.Flex9 = self.__Flex9Class(state["Flex9"], default_state["Flex9"])
		self.Image1 = self.__Image1Class(state["Image1"], default_state["Image1"])
		self.TextBox6 = self.__TextBox6Class(state["TextBox6"], default_state["TextBox6"])
		self.TextBox7 = self.__TextBox7Class(state["TextBox7"], default_state["TextBox7"])
		self.TextBox8 = self.__TextBox8Class(state["TextBox8"], default_state["TextBox8"])
		self.Flex10 = self.__Flex10Class(state["Flex10"], default_state["Flex10"])
		self.Button2 = self.__Button2Class(state["Button2"], default_state["Button2"])
		self.TextBox9 = self.__TextBox9Class(state["TextBox9"], default_state["TextBox9"])
		self.Flex11 = self.__Flex11Class(state["Flex11"], default_state["Flex11"])
	def set_event(self, event):
		self.event_data = event["event_data"]
		alias = event["alias"]
		callback_name = event["callback_name"]
		comp = getattr(self, alias)
		setattr(comp, callback_name, True)
	class __Flex2ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex2Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex2ClassstylesClass = Atri._Atri__Flex2ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex3ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex3Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex3ClassstylesClass = Atri._Atri__Flex3ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex4ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex4Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex4ClassstylesClass = Atri._Atri__Flex4ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox1ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox1ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox1Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox1ClassstylesClass = Atri._Atri__TextBox1ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox1ClasscustomClass = Atri._Atri__TextBox1ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox2ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox2ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox2Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox2ClassstylesClass = Atri._Atri__TextBox2ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox2ClasscustomClass = Atri._Atri__TextBox2ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Button1ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button1ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button1Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button1ClassstylesClass = Atri._Atri__Button1ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button1ClasscustomClass = Atri._Atri__Button1ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Menu1ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Menu1ClasscustomClass:
		def __init__(self, state, def_state):

			self.open: bool = get_defined_value(state, def_state, "open")
			self.iconHeight: int = get_defined_value(state, def_state, "iconHeight")
			self.iconWidth: int = get_defined_value(state, def_state, "iconWidth")
			self.src: str = get_defined_value(state, def_state, "src")
			self.strokeColor: str = get_defined_value(state, def_state, "strokeColor")
			self.gap: int = get_defined_value(state, def_state, "gap")
			self.alignRight: bool = get_defined_value(state, def_state, "alignRight")
	class __Menu1Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Menu1ClassstylesClass = Atri._Atri__Menu1ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Menu1ClasscustomClass = Atri._Atri__Menu1ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox4ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox4ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox4Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox4ClassstylesClass = Atri._Atri__TextBox4ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox4ClasscustomClass = Atri._Atri__TextBox4ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox5ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox5ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox5Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox5ClassstylesClass = Atri._Atri__TextBox5ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox5ClasscustomClass = Atri._Atri__TextBox5ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex5ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex5Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex5ClassstylesClass = Atri._Atri__Flex5ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex6ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex6Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex6ClassstylesClass = Atri._Atri__Flex6ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex7ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex7Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex7ClassstylesClass = Atri._Atri__Flex7ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex9ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex9Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex9ClassstylesClass = Atri._Atri__Flex9ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Image1ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image1ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image1Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image1ClassstylesClass = Atri._Atri__Image1ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image1ClasscustomClass = Atri._Atri__Image1ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox6ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox6ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox6Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox6ClassstylesClass = Atri._Atri__TextBox6ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox6ClasscustomClass = Atri._Atri__TextBox6ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox7ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox7ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox7Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox7ClassstylesClass = Atri._Atri__TextBox7ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox7ClasscustomClass = Atri._Atri__TextBox7ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox8ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox8ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox8Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox8ClassstylesClass = Atri._Atri__TextBox8ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox8ClasscustomClass = Atri._Atri__TextBox8ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex10ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex10Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex10ClassstylesClass = Atri._Atri__Flex10ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Button2ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button2ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button2Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button2ClassstylesClass = Atri._Atri__Button2ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button2ClasscustomClass = Atri._Atri__Button2ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox9ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox9ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox9Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox9ClassstylesClass = Atri._Atri__TextBox9ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox9ClasscustomClass = Atri._Atri__TextBox9ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex11ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex11Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex11ClassstylesClass = Atri._Atri__Flex11ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])