import json
from typing import List, Any, Optional
from fastapi import UploadFile
default_state = json.loads('{"TextBox10":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox11":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox12":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Button3":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"Flex12":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex13":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox13":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox14":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox15":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex16":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Button4":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"TextBox16":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Menu2":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"open":true,"iconHeight":24,"iconWidth":24,"src":"","strokeColor":"","gap":0,"alignRight":false}},"Flex17":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox17":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox18":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox19":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox20":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Button5":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"Flex21":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex22":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox21":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox22":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox23":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex25":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Button6":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"Menu3":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"open":true,"iconHeight":24,"iconWidth":24,"src":"","strokeColor":"","gap":0,"alignRight":false}},"Flex26":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox25":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex27":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex28":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex29":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox26":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox27":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex30":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex31":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox29":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Image4":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"Flex32":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex33":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox31":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex34":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox32":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Image6":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox33":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox37":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox38":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex40":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex41":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Image8":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox39":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox40":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox41":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex44":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex45":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox42":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex49":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Image9":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox43":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox44":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox45":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex50":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex51":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox46":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Image10":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox47":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox48":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox49":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex55":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex56":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox50":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Image11":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox51":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox52":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox53":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex60":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex61":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox54":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex67":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox55":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox56":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox57":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Image12":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox58":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox59":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox60":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Image13":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"Image14":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox61":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox62":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox63":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox64":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex68":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex69":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox65":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex70":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex71":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex72":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex73":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox66":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex78":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex79":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex82":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex83":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox67":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex84":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox68":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox69":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox70":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Image15":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox71":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex85":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex86":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox72":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox73":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox74":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Image16":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox75":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex90":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex91":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox76":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox77":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox78":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Image17":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox79":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex95":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex96":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex97":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex98":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex99":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox80":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox81":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox82":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Image18":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox83":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex100":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex101":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox84":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox85":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox86":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Image19":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox87":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex105":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex106":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox88":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox89":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox90":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Image20":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox91":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex110":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex111":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex112":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex113":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex115":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox92":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox93":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex117":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Image21":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"Image22":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"Flex118":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Input1":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"value":"","placeholder":"","isPasswordField":false}},"TextBox94":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex121":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex124":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Button9":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"TextBox97":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Input4":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"value":"","placeholder":"","isPasswordField":false}},"Flex125":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox98":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Input5":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"value":"","placeholder":"","isPasswordField":false}},"Flex126":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Image23":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox99":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox100":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox101":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Image24":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox102":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox103":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox104":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Image25":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox105":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox106":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox107":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox108":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox109":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox110":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Image26":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"Flex127":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex128":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox111":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Image27":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox112":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox113":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox114":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Image28":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox115":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox116":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox117":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex129":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex130":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox118":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex131":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex132":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox119":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox120":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex133":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex134":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex135":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex136":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex137":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex138":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox121":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex139":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex140":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox122":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex141":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex142":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex143":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex144":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex145":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex146":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex147":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex148":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex149":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex150":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex151":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex152":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex153":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex154":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex155":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex156":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox123":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex157":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex158":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox124":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Button14":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"Flex162":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox125":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Image30":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox128":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Image31":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox129":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox130":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox131":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex163":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex164":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox132":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Image32":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox133":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox134":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox135":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex168":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex169":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox136":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Image33":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox137":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox138":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox139":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex173":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex174":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox140":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox141":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox142":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox143":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Image34":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox145":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox146":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox147":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Image35":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox148":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex183":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex184":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox149":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox150":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox151":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Image36":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox152":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex188":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex189":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex190":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex191":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex192":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox153":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox154":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox155":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Image37":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox156":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex193":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex194":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex195":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex196":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex197":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Image38":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox157":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox158":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox159":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex198":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex199":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox160":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex200":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex201":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex202":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Image39":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox161":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox162":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox163":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex203":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex204":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox164":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex205":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex206":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex207":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}}}')
def get_defined_value(state, def_state, key):
	return state[key] if key in state else def_state[key]
class Atri:
	def __init__(self, state: Any):
		self.event_data = None
		global default_state
		self.TextBox10 = self.__TextBox10Class(state["TextBox10"], default_state["TextBox10"])
		self.TextBox11 = self.__TextBox11Class(state["TextBox11"], default_state["TextBox11"])
		self.TextBox12 = self.__TextBox12Class(state["TextBox12"], default_state["TextBox12"])
		self.Button3 = self.__Button3Class(state["Button3"], default_state["Button3"])
		self.Flex12 = self.__Flex12Class(state["Flex12"], default_state["Flex12"])
		self.Flex13 = self.__Flex13Class(state["Flex13"], default_state["Flex13"])
		self.TextBox13 = self.__TextBox13Class(state["TextBox13"], default_state["TextBox13"])
		self.TextBox14 = self.__TextBox14Class(state["TextBox14"], default_state["TextBox14"])
		self.TextBox15 = self.__TextBox15Class(state["TextBox15"], default_state["TextBox15"])
		self.Flex16 = self.__Flex16Class(state["Flex16"], default_state["Flex16"])
		self.Button4 = self.__Button4Class(state["Button4"], default_state["Button4"])
		self.TextBox16 = self.__TextBox16Class(state["TextBox16"], default_state["TextBox16"])
		self.Menu2 = self.__Menu2Class(state["Menu2"], default_state["Menu2"])
		self.Flex17 = self.__Flex17Class(state["Flex17"], default_state["Flex17"])
		self.TextBox17 = self.__TextBox17Class(state["TextBox17"], default_state["TextBox17"])
		self.TextBox18 = self.__TextBox18Class(state["TextBox18"], default_state["TextBox18"])
		self.TextBox19 = self.__TextBox19Class(state["TextBox19"], default_state["TextBox19"])
		self.TextBox20 = self.__TextBox20Class(state["TextBox20"], default_state["TextBox20"])
		self.Button5 = self.__Button5Class(state["Button5"], default_state["Button5"])
		self.Flex21 = self.__Flex21Class(state["Flex21"], default_state["Flex21"])
		self.Flex22 = self.__Flex22Class(state["Flex22"], default_state["Flex22"])
		self.TextBox21 = self.__TextBox21Class(state["TextBox21"], default_state["TextBox21"])
		self.TextBox22 = self.__TextBox22Class(state["TextBox22"], default_state["TextBox22"])
		self.TextBox23 = self.__TextBox23Class(state["TextBox23"], default_state["TextBox23"])
		self.Flex25 = self.__Flex25Class(state["Flex25"], default_state["Flex25"])
		self.Button6 = self.__Button6Class(state["Button6"], default_state["Button6"])
		self.Menu3 = self.__Menu3Class(state["Menu3"], default_state["Menu3"])
		self.Flex26 = self.__Flex26Class(state["Flex26"], default_state["Flex26"])
		self.TextBox25 = self.__TextBox25Class(state["TextBox25"], default_state["TextBox25"])
		self.Flex27 = self.__Flex27Class(state["Flex27"], default_state["Flex27"])
		self.Flex28 = self.__Flex28Class(state["Flex28"], default_state["Flex28"])
		self.Flex29 = self.__Flex29Class(state["Flex29"], default_state["Flex29"])
		self.TextBox26 = self.__TextBox26Class(state["TextBox26"], default_state["TextBox26"])
		self.TextBox27 = self.__TextBox27Class(state["TextBox27"], default_state["TextBox27"])
		self.Flex30 = self.__Flex30Class(state["Flex30"], default_state["Flex30"])
		self.Flex31 = self.__Flex31Class(state["Flex31"], default_state["Flex31"])
		self.TextBox29 = self.__TextBox29Class(state["TextBox29"], default_state["TextBox29"])
		self.Image4 = self.__Image4Class(state["Image4"], default_state["Image4"])
		self.Flex32 = self.__Flex32Class(state["Flex32"], default_state["Flex32"])
		self.Flex33 = self.__Flex33Class(state["Flex33"], default_state["Flex33"])
		self.TextBox31 = self.__TextBox31Class(state["TextBox31"], default_state["TextBox31"])
		self.Flex34 = self.__Flex34Class(state["Flex34"], default_state["Flex34"])
		self.TextBox32 = self.__TextBox32Class(state["TextBox32"], default_state["TextBox32"])
		self.Image6 = self.__Image6Class(state["Image6"], default_state["Image6"])
		self.TextBox33 = self.__TextBox33Class(state["TextBox33"], default_state["TextBox33"])
		self.TextBox37 = self.__TextBox37Class(state["TextBox37"], default_state["TextBox37"])
		self.TextBox38 = self.__TextBox38Class(state["TextBox38"], default_state["TextBox38"])
		self.Flex40 = self.__Flex40Class(state["Flex40"], default_state["Flex40"])
		self.Flex41 = self.__Flex41Class(state["Flex41"], default_state["Flex41"])
		self.Image8 = self.__Image8Class(state["Image8"], default_state["Image8"])
		self.TextBox39 = self.__TextBox39Class(state["TextBox39"], default_state["TextBox39"])
		self.TextBox40 = self.__TextBox40Class(state["TextBox40"], default_state["TextBox40"])
		self.TextBox41 = self.__TextBox41Class(state["TextBox41"], default_state["TextBox41"])
		self.Flex44 = self.__Flex44Class(state["Flex44"], default_state["Flex44"])
		self.Flex45 = self.__Flex45Class(state["Flex45"], default_state["Flex45"])
		self.TextBox42 = self.__TextBox42Class(state["TextBox42"], default_state["TextBox42"])
		self.Flex49 = self.__Flex49Class(state["Flex49"], default_state["Flex49"])
		self.Image9 = self.__Image9Class(state["Image9"], default_state["Image9"])
		self.TextBox43 = self.__TextBox43Class(state["TextBox43"], default_state["TextBox43"])
		self.TextBox44 = self.__TextBox44Class(state["TextBox44"], default_state["TextBox44"])
		self.TextBox45 = self.__TextBox45Class(state["TextBox45"], default_state["TextBox45"])
		self.Flex50 = self.__Flex50Class(state["Flex50"], default_state["Flex50"])
		self.Flex51 = self.__Flex51Class(state["Flex51"], default_state["Flex51"])
		self.TextBox46 = self.__TextBox46Class(state["TextBox46"], default_state["TextBox46"])
		self.Image10 = self.__Image10Class(state["Image10"], default_state["Image10"])
		self.TextBox47 = self.__TextBox47Class(state["TextBox47"], default_state["TextBox47"])
		self.TextBox48 = self.__TextBox48Class(state["TextBox48"], default_state["TextBox48"])
		self.TextBox49 = self.__TextBox49Class(state["TextBox49"], default_state["TextBox49"])
		self.Flex55 = self.__Flex55Class(state["Flex55"], default_state["Flex55"])
		self.Flex56 = self.__Flex56Class(state["Flex56"], default_state["Flex56"])
		self.TextBox50 = self.__TextBox50Class(state["TextBox50"], default_state["TextBox50"])
		self.Image11 = self.__Image11Class(state["Image11"], default_state["Image11"])
		self.TextBox51 = self.__TextBox51Class(state["TextBox51"], default_state["TextBox51"])
		self.TextBox52 = self.__TextBox52Class(state["TextBox52"], default_state["TextBox52"])
		self.TextBox53 = self.__TextBox53Class(state["TextBox53"], default_state["TextBox53"])
		self.Flex60 = self.__Flex60Class(state["Flex60"], default_state["Flex60"])
		self.Flex61 = self.__Flex61Class(state["Flex61"], default_state["Flex61"])
		self.TextBox54 = self.__TextBox54Class(state["TextBox54"], default_state["TextBox54"])
		self.Flex67 = self.__Flex67Class(state["Flex67"], default_state["Flex67"])
		self.TextBox55 = self.__TextBox55Class(state["TextBox55"], default_state["TextBox55"])
		self.TextBox56 = self.__TextBox56Class(state["TextBox56"], default_state["TextBox56"])
		self.TextBox57 = self.__TextBox57Class(state["TextBox57"], default_state["TextBox57"])
		self.Image12 = self.__Image12Class(state["Image12"], default_state["Image12"])
		self.TextBox58 = self.__TextBox58Class(state["TextBox58"], default_state["TextBox58"])
		self.TextBox59 = self.__TextBox59Class(state["TextBox59"], default_state["TextBox59"])
		self.TextBox60 = self.__TextBox60Class(state["TextBox60"], default_state["TextBox60"])
		self.Image13 = self.__Image13Class(state["Image13"], default_state["Image13"])
		self.Image14 = self.__Image14Class(state["Image14"], default_state["Image14"])
		self.TextBox61 = self.__TextBox61Class(state["TextBox61"], default_state["TextBox61"])
		self.TextBox62 = self.__TextBox62Class(state["TextBox62"], default_state["TextBox62"])
		self.TextBox63 = self.__TextBox63Class(state["TextBox63"], default_state["TextBox63"])
		self.TextBox64 = self.__TextBox64Class(state["TextBox64"], default_state["TextBox64"])
		self.Flex68 = self.__Flex68Class(state["Flex68"], default_state["Flex68"])
		self.Flex69 = self.__Flex69Class(state["Flex69"], default_state["Flex69"])
		self.TextBox65 = self.__TextBox65Class(state["TextBox65"], default_state["TextBox65"])
		self.Flex70 = self.__Flex70Class(state["Flex70"], default_state["Flex70"])
		self.Flex71 = self.__Flex71Class(state["Flex71"], default_state["Flex71"])
		self.Flex72 = self.__Flex72Class(state["Flex72"], default_state["Flex72"])
		self.Flex73 = self.__Flex73Class(state["Flex73"], default_state["Flex73"])
		self.TextBox66 = self.__TextBox66Class(state["TextBox66"], default_state["TextBox66"])
		self.Flex78 = self.__Flex78Class(state["Flex78"], default_state["Flex78"])
		self.Flex79 = self.__Flex79Class(state["Flex79"], default_state["Flex79"])
		self.Flex82 = self.__Flex82Class(state["Flex82"], default_state["Flex82"])
		self.Flex83 = self.__Flex83Class(state["Flex83"], default_state["Flex83"])
		self.TextBox67 = self.__TextBox67Class(state["TextBox67"], default_state["TextBox67"])
		self.Flex84 = self.__Flex84Class(state["Flex84"], default_state["Flex84"])
		self.TextBox68 = self.__TextBox68Class(state["TextBox68"], default_state["TextBox68"])
		self.TextBox69 = self.__TextBox69Class(state["TextBox69"], default_state["TextBox69"])
		self.TextBox70 = self.__TextBox70Class(state["TextBox70"], default_state["TextBox70"])
		self.Image15 = self.__Image15Class(state["Image15"], default_state["Image15"])
		self.TextBox71 = self.__TextBox71Class(state["TextBox71"], default_state["TextBox71"])
		self.Flex85 = self.__Flex85Class(state["Flex85"], default_state["Flex85"])
		self.Flex86 = self.__Flex86Class(state["Flex86"], default_state["Flex86"])
		self.TextBox72 = self.__TextBox72Class(state["TextBox72"], default_state["TextBox72"])
		self.TextBox73 = self.__TextBox73Class(state["TextBox73"], default_state["TextBox73"])
		self.TextBox74 = self.__TextBox74Class(state["TextBox74"], default_state["TextBox74"])
		self.Image16 = self.__Image16Class(state["Image16"], default_state["Image16"])
		self.TextBox75 = self.__TextBox75Class(state["TextBox75"], default_state["TextBox75"])
		self.Flex90 = self.__Flex90Class(state["Flex90"], default_state["Flex90"])
		self.Flex91 = self.__Flex91Class(state["Flex91"], default_state["Flex91"])
		self.TextBox76 = self.__TextBox76Class(state["TextBox76"], default_state["TextBox76"])
		self.TextBox77 = self.__TextBox77Class(state["TextBox77"], default_state["TextBox77"])
		self.TextBox78 = self.__TextBox78Class(state["TextBox78"], default_state["TextBox78"])
		self.Image17 = self.__Image17Class(state["Image17"], default_state["Image17"])
		self.TextBox79 = self.__TextBox79Class(state["TextBox79"], default_state["TextBox79"])
		self.Flex95 = self.__Flex95Class(state["Flex95"], default_state["Flex95"])
		self.Flex96 = self.__Flex96Class(state["Flex96"], default_state["Flex96"])
		self.Flex97 = self.__Flex97Class(state["Flex97"], default_state["Flex97"])
		self.Flex98 = self.__Flex98Class(state["Flex98"], default_state["Flex98"])
		self.Flex99 = self.__Flex99Class(state["Flex99"], default_state["Flex99"])
		self.TextBox80 = self.__TextBox80Class(state["TextBox80"], default_state["TextBox80"])
		self.TextBox81 = self.__TextBox81Class(state["TextBox81"], default_state["TextBox81"])
		self.TextBox82 = self.__TextBox82Class(state["TextBox82"], default_state["TextBox82"])
		self.Image18 = self.__Image18Class(state["Image18"], default_state["Image18"])
		self.TextBox83 = self.__TextBox83Class(state["TextBox83"], default_state["TextBox83"])
		self.Flex100 = self.__Flex100Class(state["Flex100"], default_state["Flex100"])
		self.Flex101 = self.__Flex101Class(state["Flex101"], default_state["Flex101"])
		self.TextBox84 = self.__TextBox84Class(state["TextBox84"], default_state["TextBox84"])
		self.TextBox85 = self.__TextBox85Class(state["TextBox85"], default_state["TextBox85"])
		self.TextBox86 = self.__TextBox86Class(state["TextBox86"], default_state["TextBox86"])
		self.Image19 = self.__Image19Class(state["Image19"], default_state["Image19"])
		self.TextBox87 = self.__TextBox87Class(state["TextBox87"], default_state["TextBox87"])
		self.Flex105 = self.__Flex105Class(state["Flex105"], default_state["Flex105"])
		self.Flex106 = self.__Flex106Class(state["Flex106"], default_state["Flex106"])
		self.TextBox88 = self.__TextBox88Class(state["TextBox88"], default_state["TextBox88"])
		self.TextBox89 = self.__TextBox89Class(state["TextBox89"], default_state["TextBox89"])
		self.TextBox90 = self.__TextBox90Class(state["TextBox90"], default_state["TextBox90"])
		self.Image20 = self.__Image20Class(state["Image20"], default_state["Image20"])
		self.TextBox91 = self.__TextBox91Class(state["TextBox91"], default_state["TextBox91"])
		self.Flex110 = self.__Flex110Class(state["Flex110"], default_state["Flex110"])
		self.Flex111 = self.__Flex111Class(state["Flex111"], default_state["Flex111"])
		self.Flex112 = self.__Flex112Class(state["Flex112"], default_state["Flex112"])
		self.Flex113 = self.__Flex113Class(state["Flex113"], default_state["Flex113"])
		self.Flex115 = self.__Flex115Class(state["Flex115"], default_state["Flex115"])
		self.TextBox92 = self.__TextBox92Class(state["TextBox92"], default_state["TextBox92"])
		self.TextBox93 = self.__TextBox93Class(state["TextBox93"], default_state["TextBox93"])
		self.Flex117 = self.__Flex117Class(state["Flex117"], default_state["Flex117"])
		self.Image21 = self.__Image21Class(state["Image21"], default_state["Image21"])
		self.Image22 = self.__Image22Class(state["Image22"], default_state["Image22"])
		self.Flex118 = self.__Flex118Class(state["Flex118"], default_state["Flex118"])
		self.Input1 = self.__Input1Class(state["Input1"], default_state["Input1"])
		self.TextBox94 = self.__TextBox94Class(state["TextBox94"], default_state["TextBox94"])
		self.Flex121 = self.__Flex121Class(state["Flex121"], default_state["Flex121"])
		self.Flex124 = self.__Flex124Class(state["Flex124"], default_state["Flex124"])
		self.Button9 = self.__Button9Class(state["Button9"], default_state["Button9"])
		self.TextBox97 = self.__TextBox97Class(state["TextBox97"], default_state["TextBox97"])
		self.Input4 = self.__Input4Class(state["Input4"], default_state["Input4"])
		self.Flex125 = self.__Flex125Class(state["Flex125"], default_state["Flex125"])
		self.TextBox98 = self.__TextBox98Class(state["TextBox98"], default_state["TextBox98"])
		self.Input5 = self.__Input5Class(state["Input5"], default_state["Input5"])
		self.Flex126 = self.__Flex126Class(state["Flex126"], default_state["Flex126"])
		self.Image23 = self.__Image23Class(state["Image23"], default_state["Image23"])
		self.TextBox99 = self.__TextBox99Class(state["TextBox99"], default_state["TextBox99"])
		self.TextBox100 = self.__TextBox100Class(state["TextBox100"], default_state["TextBox100"])
		self.TextBox101 = self.__TextBox101Class(state["TextBox101"], default_state["TextBox101"])
		self.Image24 = self.__Image24Class(state["Image24"], default_state["Image24"])
		self.TextBox102 = self.__TextBox102Class(state["TextBox102"], default_state["TextBox102"])
		self.TextBox103 = self.__TextBox103Class(state["TextBox103"], default_state["TextBox103"])
		self.TextBox104 = self.__TextBox104Class(state["TextBox104"], default_state["TextBox104"])
		self.Image25 = self.__Image25Class(state["Image25"], default_state["Image25"])
		self.TextBox105 = self.__TextBox105Class(state["TextBox105"], default_state["TextBox105"])
		self.TextBox106 = self.__TextBox106Class(state["TextBox106"], default_state["TextBox106"])
		self.TextBox107 = self.__TextBox107Class(state["TextBox107"], default_state["TextBox107"])
		self.TextBox108 = self.__TextBox108Class(state["TextBox108"], default_state["TextBox108"])
		self.TextBox109 = self.__TextBox109Class(state["TextBox109"], default_state["TextBox109"])
		self.TextBox110 = self.__TextBox110Class(state["TextBox110"], default_state["TextBox110"])
		self.Image26 = self.__Image26Class(state["Image26"], default_state["Image26"])
		self.Flex127 = self.__Flex127Class(state["Flex127"], default_state["Flex127"])
		self.Flex128 = self.__Flex128Class(state["Flex128"], default_state["Flex128"])
		self.TextBox111 = self.__TextBox111Class(state["TextBox111"], default_state["TextBox111"])
		self.Image27 = self.__Image27Class(state["Image27"], default_state["Image27"])
		self.TextBox112 = self.__TextBox112Class(state["TextBox112"], default_state["TextBox112"])
		self.TextBox113 = self.__TextBox113Class(state["TextBox113"], default_state["TextBox113"])
		self.TextBox114 = self.__TextBox114Class(state["TextBox114"], default_state["TextBox114"])
		self.Image28 = self.__Image28Class(state["Image28"], default_state["Image28"])
		self.TextBox115 = self.__TextBox115Class(state["TextBox115"], default_state["TextBox115"])
		self.TextBox116 = self.__TextBox116Class(state["TextBox116"], default_state["TextBox116"])
		self.TextBox117 = self.__TextBox117Class(state["TextBox117"], default_state["TextBox117"])
		self.Flex129 = self.__Flex129Class(state["Flex129"], default_state["Flex129"])
		self.Flex130 = self.__Flex130Class(state["Flex130"], default_state["Flex130"])
		self.TextBox118 = self.__TextBox118Class(state["TextBox118"], default_state["TextBox118"])
		self.Flex131 = self.__Flex131Class(state["Flex131"], default_state["Flex131"])
		self.Flex132 = self.__Flex132Class(state["Flex132"], default_state["Flex132"])
		self.TextBox119 = self.__TextBox119Class(state["TextBox119"], default_state["TextBox119"])
		self.TextBox120 = self.__TextBox120Class(state["TextBox120"], default_state["TextBox120"])
		self.Flex133 = self.__Flex133Class(state["Flex133"], default_state["Flex133"])
		self.Flex134 = self.__Flex134Class(state["Flex134"], default_state["Flex134"])
		self.Flex135 = self.__Flex135Class(state["Flex135"], default_state["Flex135"])
		self.Flex136 = self.__Flex136Class(state["Flex136"], default_state["Flex136"])
		self.Flex137 = self.__Flex137Class(state["Flex137"], default_state["Flex137"])
		self.Flex138 = self.__Flex138Class(state["Flex138"], default_state["Flex138"])
		self.TextBox121 = self.__TextBox121Class(state["TextBox121"], default_state["TextBox121"])
		self.Flex139 = self.__Flex139Class(state["Flex139"], default_state["Flex139"])
		self.Flex140 = self.__Flex140Class(state["Flex140"], default_state["Flex140"])
		self.TextBox122 = self.__TextBox122Class(state["TextBox122"], default_state["TextBox122"])
		self.Flex141 = self.__Flex141Class(state["Flex141"], default_state["Flex141"])
		self.Flex142 = self.__Flex142Class(state["Flex142"], default_state["Flex142"])
		self.Flex143 = self.__Flex143Class(state["Flex143"], default_state["Flex143"])
		self.Flex144 = self.__Flex144Class(state["Flex144"], default_state["Flex144"])
		self.Flex145 = self.__Flex145Class(state["Flex145"], default_state["Flex145"])
		self.Flex146 = self.__Flex146Class(state["Flex146"], default_state["Flex146"])
		self.Flex147 = self.__Flex147Class(state["Flex147"], default_state["Flex147"])
		self.Flex148 = self.__Flex148Class(state["Flex148"], default_state["Flex148"])
		self.Flex149 = self.__Flex149Class(state["Flex149"], default_state["Flex149"])
		self.Flex150 = self.__Flex150Class(state["Flex150"], default_state["Flex150"])
		self.Flex151 = self.__Flex151Class(state["Flex151"], default_state["Flex151"])
		self.Flex152 = self.__Flex152Class(state["Flex152"], default_state["Flex152"])
		self.Flex153 = self.__Flex153Class(state["Flex153"], default_state["Flex153"])
		self.Flex154 = self.__Flex154Class(state["Flex154"], default_state["Flex154"])
		self.Flex155 = self.__Flex155Class(state["Flex155"], default_state["Flex155"])
		self.Flex156 = self.__Flex156Class(state["Flex156"], default_state["Flex156"])
		self.TextBox123 = self.__TextBox123Class(state["TextBox123"], default_state["TextBox123"])
		self.Flex157 = self.__Flex157Class(state["Flex157"], default_state["Flex157"])
		self.Flex158 = self.__Flex158Class(state["Flex158"], default_state["Flex158"])
		self.TextBox124 = self.__TextBox124Class(state["TextBox124"], default_state["TextBox124"])
		self.Button14 = self.__Button14Class(state["Button14"], default_state["Button14"])
		self.Flex162 = self.__Flex162Class(state["Flex162"], default_state["Flex162"])
		self.TextBox125 = self.__TextBox125Class(state["TextBox125"], default_state["TextBox125"])
		self.Image30 = self.__Image30Class(state["Image30"], default_state["Image30"])
		self.TextBox128 = self.__TextBox128Class(state["TextBox128"], default_state["TextBox128"])
		self.Image31 = self.__Image31Class(state["Image31"], default_state["Image31"])
		self.TextBox129 = self.__TextBox129Class(state["TextBox129"], default_state["TextBox129"])
		self.TextBox130 = self.__TextBox130Class(state["TextBox130"], default_state["TextBox130"])
		self.TextBox131 = self.__TextBox131Class(state["TextBox131"], default_state["TextBox131"])
		self.Flex163 = self.__Flex163Class(state["Flex163"], default_state["Flex163"])
		self.Flex164 = self.__Flex164Class(state["Flex164"], default_state["Flex164"])
		self.TextBox132 = self.__TextBox132Class(state["TextBox132"], default_state["TextBox132"])
		self.Image32 = self.__Image32Class(state["Image32"], default_state["Image32"])
		self.TextBox133 = self.__TextBox133Class(state["TextBox133"], default_state["TextBox133"])
		self.TextBox134 = self.__TextBox134Class(state["TextBox134"], default_state["TextBox134"])
		self.TextBox135 = self.__TextBox135Class(state["TextBox135"], default_state["TextBox135"])
		self.Flex168 = self.__Flex168Class(state["Flex168"], default_state["Flex168"])
		self.Flex169 = self.__Flex169Class(state["Flex169"], default_state["Flex169"])
		self.TextBox136 = self.__TextBox136Class(state["TextBox136"], default_state["TextBox136"])
		self.Image33 = self.__Image33Class(state["Image33"], default_state["Image33"])
		self.TextBox137 = self.__TextBox137Class(state["TextBox137"], default_state["TextBox137"])
		self.TextBox138 = self.__TextBox138Class(state["TextBox138"], default_state["TextBox138"])
		self.TextBox139 = self.__TextBox139Class(state["TextBox139"], default_state["TextBox139"])
		self.Flex173 = self.__Flex173Class(state["Flex173"], default_state["Flex173"])
		self.Flex174 = self.__Flex174Class(state["Flex174"], default_state["Flex174"])
		self.TextBox140 = self.__TextBox140Class(state["TextBox140"], default_state["TextBox140"])
		self.TextBox141 = self.__TextBox141Class(state["TextBox141"], default_state["TextBox141"])
		self.TextBox142 = self.__TextBox142Class(state["TextBox142"], default_state["TextBox142"])
		self.TextBox143 = self.__TextBox143Class(state["TextBox143"], default_state["TextBox143"])
		self.Image34 = self.__Image34Class(state["Image34"], default_state["Image34"])
		self.TextBox145 = self.__TextBox145Class(state["TextBox145"], default_state["TextBox145"])
		self.TextBox146 = self.__TextBox146Class(state["TextBox146"], default_state["TextBox146"])
		self.TextBox147 = self.__TextBox147Class(state["TextBox147"], default_state["TextBox147"])
		self.Image35 = self.__Image35Class(state["Image35"], default_state["Image35"])
		self.TextBox148 = self.__TextBox148Class(state["TextBox148"], default_state["TextBox148"])
		self.Flex183 = self.__Flex183Class(state["Flex183"], default_state["Flex183"])
		self.Flex184 = self.__Flex184Class(state["Flex184"], default_state["Flex184"])
		self.TextBox149 = self.__TextBox149Class(state["TextBox149"], default_state["TextBox149"])
		self.TextBox150 = self.__TextBox150Class(state["TextBox150"], default_state["TextBox150"])
		self.TextBox151 = self.__TextBox151Class(state["TextBox151"], default_state["TextBox151"])
		self.Image36 = self.__Image36Class(state["Image36"], default_state["Image36"])
		self.TextBox152 = self.__TextBox152Class(state["TextBox152"], default_state["TextBox152"])
		self.Flex188 = self.__Flex188Class(state["Flex188"], default_state["Flex188"])
		self.Flex189 = self.__Flex189Class(state["Flex189"], default_state["Flex189"])
		self.Flex190 = self.__Flex190Class(state["Flex190"], default_state["Flex190"])
		self.Flex191 = self.__Flex191Class(state["Flex191"], default_state["Flex191"])
		self.Flex192 = self.__Flex192Class(state["Flex192"], default_state["Flex192"])
		self.TextBox153 = self.__TextBox153Class(state["TextBox153"], default_state["TextBox153"])
		self.TextBox154 = self.__TextBox154Class(state["TextBox154"], default_state["TextBox154"])
		self.TextBox155 = self.__TextBox155Class(state["TextBox155"], default_state["TextBox155"])
		self.Image37 = self.__Image37Class(state["Image37"], default_state["Image37"])
		self.TextBox156 = self.__TextBox156Class(state["TextBox156"], default_state["TextBox156"])
		self.Flex193 = self.__Flex193Class(state["Flex193"], default_state["Flex193"])
		self.Flex194 = self.__Flex194Class(state["Flex194"], default_state["Flex194"])
		self.Flex195 = self.__Flex195Class(state["Flex195"], default_state["Flex195"])
		self.Flex196 = self.__Flex196Class(state["Flex196"], default_state["Flex196"])
		self.Flex197 = self.__Flex197Class(state["Flex197"], default_state["Flex197"])
		self.Image38 = self.__Image38Class(state["Image38"], default_state["Image38"])
		self.TextBox157 = self.__TextBox157Class(state["TextBox157"], default_state["TextBox157"])
		self.TextBox158 = self.__TextBox158Class(state["TextBox158"], default_state["TextBox158"])
		self.TextBox159 = self.__TextBox159Class(state["TextBox159"], default_state["TextBox159"])
		self.Flex198 = self.__Flex198Class(state["Flex198"], default_state["Flex198"])
		self.Flex199 = self.__Flex199Class(state["Flex199"], default_state["Flex199"])
		self.TextBox160 = self.__TextBox160Class(state["TextBox160"], default_state["TextBox160"])
		self.Flex200 = self.__Flex200Class(state["Flex200"], default_state["Flex200"])
		self.Flex201 = self.__Flex201Class(state["Flex201"], default_state["Flex201"])
		self.Flex202 = self.__Flex202Class(state["Flex202"], default_state["Flex202"])
		self.Image39 = self.__Image39Class(state["Image39"], default_state["Image39"])
		self.TextBox161 = self.__TextBox161Class(state["TextBox161"], default_state["TextBox161"])
		self.TextBox162 = self.__TextBox162Class(state["TextBox162"], default_state["TextBox162"])
		self.TextBox163 = self.__TextBox163Class(state["TextBox163"], default_state["TextBox163"])
		self.Flex203 = self.__Flex203Class(state["Flex203"], default_state["Flex203"])
		self.Flex204 = self.__Flex204Class(state["Flex204"], default_state["Flex204"])
		self.TextBox164 = self.__TextBox164Class(state["TextBox164"], default_state["TextBox164"])
		self.Flex205 = self.__Flex205Class(state["Flex205"], default_state["Flex205"])
		self.Flex206 = self.__Flex206Class(state["Flex206"], default_state["Flex206"])
		self.Flex207 = self.__Flex207Class(state["Flex207"], default_state["Flex207"])
	def set_event(self, event):
		self.event_data = event["event_data"]
		alias = event["alias"]
		callback_name = event["callback_name"]
		comp = getattr(self, alias)
		setattr(comp, callback_name, True)
	class __TextBox10ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox10ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox10Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox10ClassstylesClass = Atri._Atri__TextBox10ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox10ClasscustomClass = Atri._Atri__TextBox10ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox11ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox11ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox11Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox11ClassstylesClass = Atri._Atri__TextBox11ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox11ClasscustomClass = Atri._Atri__TextBox11ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox12ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox12ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox12Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox12ClassstylesClass = Atri._Atri__TextBox12ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox12ClasscustomClass = Atri._Atri__TextBox12ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Button3ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button3ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button3Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button3ClassstylesClass = Atri._Atri__Button3ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button3ClasscustomClass = Atri._Atri__Button3ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex12ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex12Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex12ClassstylesClass = Atri._Atri__Flex12ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex13ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex13Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex13ClassstylesClass = Atri._Atri__Flex13ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox13ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox13ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox13Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox13ClassstylesClass = Atri._Atri__TextBox13ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox13ClasscustomClass = Atri._Atri__TextBox13ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox14ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox14ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox14Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox14ClassstylesClass = Atri._Atri__TextBox14ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox14ClasscustomClass = Atri._Atri__TextBox14ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox15ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox15ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox15Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox15ClassstylesClass = Atri._Atri__TextBox15ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox15ClasscustomClass = Atri._Atri__TextBox15ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex16ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex16Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex16ClassstylesClass = Atri._Atri__Flex16ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Button4ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button4ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button4Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button4ClassstylesClass = Atri._Atri__Button4ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button4ClasscustomClass = Atri._Atri__Button4ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox16ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox16ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox16Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox16ClassstylesClass = Atri._Atri__TextBox16ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox16ClasscustomClass = Atri._Atri__TextBox16ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Menu2ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Menu2ClasscustomClass:
		def __init__(self, state, def_state):

			self.open: bool = get_defined_value(state, def_state, "open")
			self.iconHeight: int = get_defined_value(state, def_state, "iconHeight")
			self.iconWidth: int = get_defined_value(state, def_state, "iconWidth")
			self.src: str = get_defined_value(state, def_state, "src")
			self.strokeColor: str = get_defined_value(state, def_state, "strokeColor")
			self.gap: int = get_defined_value(state, def_state, "gap")
			self.alignRight: bool = get_defined_value(state, def_state, "alignRight")
	class __Menu2Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Menu2ClassstylesClass = Atri._Atri__Menu2ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Menu2ClasscustomClass = Atri._Atri__Menu2ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex17ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex17Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex17ClassstylesClass = Atri._Atri__Flex17ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox17ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox17ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox17Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox17ClassstylesClass = Atri._Atri__TextBox17ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox17ClasscustomClass = Atri._Atri__TextBox17ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox18ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox18ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox18Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox18ClassstylesClass = Atri._Atri__TextBox18ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox18ClasscustomClass = Atri._Atri__TextBox18ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox19ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox19ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox19Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox19ClassstylesClass = Atri._Atri__TextBox19ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox19ClasscustomClass = Atri._Atri__TextBox19ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox20ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox20ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox20Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox20ClassstylesClass = Atri._Atri__TextBox20ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox20ClasscustomClass = Atri._Atri__TextBox20ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Button5ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button5ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button5Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button5ClassstylesClass = Atri._Atri__Button5ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button5ClasscustomClass = Atri._Atri__Button5ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex21ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex21Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex21ClassstylesClass = Atri._Atri__Flex21ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex22ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex22Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex22ClassstylesClass = Atri._Atri__Flex22ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox21ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox21ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox21Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox21ClassstylesClass = Atri._Atri__TextBox21ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox21ClasscustomClass = Atri._Atri__TextBox21ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox22ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox22ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox22Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox22ClassstylesClass = Atri._Atri__TextBox22ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox22ClasscustomClass = Atri._Atri__TextBox22ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox23ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox23ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox23Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox23ClassstylesClass = Atri._Atri__TextBox23ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox23ClasscustomClass = Atri._Atri__TextBox23ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex25ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex25Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex25ClassstylesClass = Atri._Atri__Flex25ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Button6ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button6ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button6Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button6ClassstylesClass = Atri._Atri__Button6ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button6ClasscustomClass = Atri._Atri__Button6ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Menu3ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Menu3ClasscustomClass:
		def __init__(self, state, def_state):

			self.open: bool = get_defined_value(state, def_state, "open")
			self.iconHeight: int = get_defined_value(state, def_state, "iconHeight")
			self.iconWidth: int = get_defined_value(state, def_state, "iconWidth")
			self.src: str = get_defined_value(state, def_state, "src")
			self.strokeColor: str = get_defined_value(state, def_state, "strokeColor")
			self.gap: int = get_defined_value(state, def_state, "gap")
			self.alignRight: bool = get_defined_value(state, def_state, "alignRight")
	class __Menu3Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Menu3ClassstylesClass = Atri._Atri__Menu3ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Menu3ClasscustomClass = Atri._Atri__Menu3ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex26ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex26Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex26ClassstylesClass = Atri._Atri__Flex26ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox25ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox25ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox25Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox25ClassstylesClass = Atri._Atri__TextBox25ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox25ClasscustomClass = Atri._Atri__TextBox25ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex27ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex27Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex27ClassstylesClass = Atri._Atri__Flex27ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex28ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex28Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex28ClassstylesClass = Atri._Atri__Flex28ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex29ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex29Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex29ClassstylesClass = Atri._Atri__Flex29ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox26ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox26ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox26Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox26ClassstylesClass = Atri._Atri__TextBox26ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox26ClasscustomClass = Atri._Atri__TextBox26ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox27ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox27ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox27Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox27ClassstylesClass = Atri._Atri__TextBox27ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox27ClasscustomClass = Atri._Atri__TextBox27ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex30ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex30Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex30ClassstylesClass = Atri._Atri__Flex30ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex31ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex31Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex31ClassstylesClass = Atri._Atri__Flex31ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox29ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox29ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox29Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox29ClassstylesClass = Atri._Atri__TextBox29ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox29ClasscustomClass = Atri._Atri__TextBox29ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image4ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image4ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image4Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image4ClassstylesClass = Atri._Atri__Image4ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image4ClasscustomClass = Atri._Atri__Image4ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex32ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex32Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex32ClassstylesClass = Atri._Atri__Flex32ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex33ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex33Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex33ClassstylesClass = Atri._Atri__Flex33ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox31ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox31ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox31Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox31ClassstylesClass = Atri._Atri__TextBox31ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox31ClasscustomClass = Atri._Atri__TextBox31ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex34ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex34Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex34ClassstylesClass = Atri._Atri__Flex34ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox32ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox32ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox32Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox32ClassstylesClass = Atri._Atri__TextBox32ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox32ClasscustomClass = Atri._Atri__TextBox32ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image6ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image6ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image6Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image6ClassstylesClass = Atri._Atri__Image6ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image6ClasscustomClass = Atri._Atri__Image6ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox33ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox33ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox33Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox33ClassstylesClass = Atri._Atri__TextBox33ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox33ClasscustomClass = Atri._Atri__TextBox33ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox37ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox37ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox37Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox37ClassstylesClass = Atri._Atri__TextBox37ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox37ClasscustomClass = Atri._Atri__TextBox37ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox38ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox38ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox38Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox38ClassstylesClass = Atri._Atri__TextBox38ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox38ClasscustomClass = Atri._Atri__TextBox38ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex40ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex40Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex40ClassstylesClass = Atri._Atri__Flex40ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex41ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex41Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex41ClassstylesClass = Atri._Atri__Flex41ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Image8ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image8ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image8Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image8ClassstylesClass = Atri._Atri__Image8ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image8ClasscustomClass = Atri._Atri__Image8ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox39ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox39ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox39Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox39ClassstylesClass = Atri._Atri__TextBox39ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox39ClasscustomClass = Atri._Atri__TextBox39ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox40ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox40ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox40Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox40ClassstylesClass = Atri._Atri__TextBox40ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox40ClasscustomClass = Atri._Atri__TextBox40ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox41ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox41ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox41Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox41ClassstylesClass = Atri._Atri__TextBox41ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox41ClasscustomClass = Atri._Atri__TextBox41ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex44ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex44Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex44ClassstylesClass = Atri._Atri__Flex44ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex45ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex45Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex45ClassstylesClass = Atri._Atri__Flex45ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox42ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox42ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox42Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox42ClassstylesClass = Atri._Atri__TextBox42ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox42ClasscustomClass = Atri._Atri__TextBox42ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex49ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex49Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex49ClassstylesClass = Atri._Atri__Flex49ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Image9ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image9ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image9Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image9ClassstylesClass = Atri._Atri__Image9ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image9ClasscustomClass = Atri._Atri__Image9ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox43ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox43ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox43Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox43ClassstylesClass = Atri._Atri__TextBox43ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox43ClasscustomClass = Atri._Atri__TextBox43ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox44ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox44ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox44Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox44ClassstylesClass = Atri._Atri__TextBox44ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox44ClasscustomClass = Atri._Atri__TextBox44ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox45ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox45ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox45Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox45ClassstylesClass = Atri._Atri__TextBox45ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox45ClasscustomClass = Atri._Atri__TextBox45ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex50ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex50Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex50ClassstylesClass = Atri._Atri__Flex50ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex51ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex51Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex51ClassstylesClass = Atri._Atri__Flex51ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox46ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox46ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox46Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox46ClassstylesClass = Atri._Atri__TextBox46ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox46ClasscustomClass = Atri._Atri__TextBox46ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image10ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image10ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image10Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image10ClassstylesClass = Atri._Atri__Image10ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image10ClasscustomClass = Atri._Atri__Image10ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox47ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox47ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox47Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox47ClassstylesClass = Atri._Atri__TextBox47ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox47ClasscustomClass = Atri._Atri__TextBox47ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox48ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox48ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox48Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox48ClassstylesClass = Atri._Atri__TextBox48ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox48ClasscustomClass = Atri._Atri__TextBox48ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox49ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox49ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox49Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox49ClassstylesClass = Atri._Atri__TextBox49ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox49ClasscustomClass = Atri._Atri__TextBox49ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex55ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex55Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex55ClassstylesClass = Atri._Atri__Flex55ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex56ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex56Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex56ClassstylesClass = Atri._Atri__Flex56ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox50ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox50ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox50Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox50ClassstylesClass = Atri._Atri__TextBox50ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox50ClasscustomClass = Atri._Atri__TextBox50ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image11ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image11ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image11Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image11ClassstylesClass = Atri._Atri__Image11ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image11ClasscustomClass = Atri._Atri__Image11ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox51ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox51ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox51Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox51ClassstylesClass = Atri._Atri__TextBox51ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox51ClasscustomClass = Atri._Atri__TextBox51ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox52ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox52ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox52Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox52ClassstylesClass = Atri._Atri__TextBox52ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox52ClasscustomClass = Atri._Atri__TextBox52ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox53ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox53ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox53Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox53ClassstylesClass = Atri._Atri__TextBox53ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox53ClasscustomClass = Atri._Atri__TextBox53ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex60ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex60Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex60ClassstylesClass = Atri._Atri__Flex60ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex61ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex61Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex61ClassstylesClass = Atri._Atri__Flex61ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox54ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox54ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox54Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox54ClassstylesClass = Atri._Atri__TextBox54ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox54ClasscustomClass = Atri._Atri__TextBox54ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex67ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex67Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex67ClassstylesClass = Atri._Atri__Flex67ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox55ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox55ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox55Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox55ClassstylesClass = Atri._Atri__TextBox55ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox55ClasscustomClass = Atri._Atri__TextBox55ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox56ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox56ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox56Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox56ClassstylesClass = Atri._Atri__TextBox56ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox56ClasscustomClass = Atri._Atri__TextBox56ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox57ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox57ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox57Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox57ClassstylesClass = Atri._Atri__TextBox57ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox57ClasscustomClass = Atri._Atri__TextBox57ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image12ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image12ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image12Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image12ClassstylesClass = Atri._Atri__Image12ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image12ClasscustomClass = Atri._Atri__Image12ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox58ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox58ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox58Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox58ClassstylesClass = Atri._Atri__TextBox58ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox58ClasscustomClass = Atri._Atri__TextBox58ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox59ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox59ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox59Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox59ClassstylesClass = Atri._Atri__TextBox59ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox59ClasscustomClass = Atri._Atri__TextBox59ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox60ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox60ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox60Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox60ClassstylesClass = Atri._Atri__TextBox60ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox60ClasscustomClass = Atri._Atri__TextBox60ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image13ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image13ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image13Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image13ClassstylesClass = Atri._Atri__Image13ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image13ClasscustomClass = Atri._Atri__Image13ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image14ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image14ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image14Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image14ClassstylesClass = Atri._Atri__Image14ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image14ClasscustomClass = Atri._Atri__Image14ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox61ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox61ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox61Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox61ClassstylesClass = Atri._Atri__TextBox61ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox61ClasscustomClass = Atri._Atri__TextBox61ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox62ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox62ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox62Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox62ClassstylesClass = Atri._Atri__TextBox62ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox62ClasscustomClass = Atri._Atri__TextBox62ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox63ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox63ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox63Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox63ClassstylesClass = Atri._Atri__TextBox63ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox63ClasscustomClass = Atri._Atri__TextBox63ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox64ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox64ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox64Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox64ClassstylesClass = Atri._Atri__TextBox64ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox64ClasscustomClass = Atri._Atri__TextBox64ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex68ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex68Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex68ClassstylesClass = Atri._Atri__Flex68ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex69ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex69Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex69ClassstylesClass = Atri._Atri__Flex69ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox65ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox65ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox65Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox65ClassstylesClass = Atri._Atri__TextBox65ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox65ClasscustomClass = Atri._Atri__TextBox65ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex70ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex70Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex70ClassstylesClass = Atri._Atri__Flex70ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex71ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex71Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex71ClassstylesClass = Atri._Atri__Flex71ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex72ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex72Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex72ClassstylesClass = Atri._Atri__Flex72ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex73ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex73Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex73ClassstylesClass = Atri._Atri__Flex73ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox66ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox66ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox66Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox66ClassstylesClass = Atri._Atri__TextBox66ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox66ClasscustomClass = Atri._Atri__TextBox66ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex78ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex78Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex78ClassstylesClass = Atri._Atri__Flex78ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex79ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex79Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex79ClassstylesClass = Atri._Atri__Flex79ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex82ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex82Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex82ClassstylesClass = Atri._Atri__Flex82ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex83ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex83Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex83ClassstylesClass = Atri._Atri__Flex83ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox67ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox67ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox67Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox67ClassstylesClass = Atri._Atri__TextBox67ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox67ClasscustomClass = Atri._Atri__TextBox67ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex84ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex84Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex84ClassstylesClass = Atri._Atri__Flex84ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox68ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox68ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox68Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox68ClassstylesClass = Atri._Atri__TextBox68ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox68ClasscustomClass = Atri._Atri__TextBox68ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox69ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox69ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox69Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox69ClassstylesClass = Atri._Atri__TextBox69ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox69ClasscustomClass = Atri._Atri__TextBox69ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox70ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox70ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox70Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox70ClassstylesClass = Atri._Atri__TextBox70ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox70ClasscustomClass = Atri._Atri__TextBox70ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image15ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image15ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image15Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image15ClassstylesClass = Atri._Atri__Image15ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image15ClasscustomClass = Atri._Atri__Image15ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox71ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox71ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox71Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox71ClassstylesClass = Atri._Atri__TextBox71ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox71ClasscustomClass = Atri._Atri__TextBox71ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex85ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex85Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex85ClassstylesClass = Atri._Atri__Flex85ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex86ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex86Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex86ClassstylesClass = Atri._Atri__Flex86ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox72ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox72ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox72Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox72ClassstylesClass = Atri._Atri__TextBox72ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox72ClasscustomClass = Atri._Atri__TextBox72ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox73ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox73ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox73Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox73ClassstylesClass = Atri._Atri__TextBox73ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox73ClasscustomClass = Atri._Atri__TextBox73ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox74ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox74ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox74Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox74ClassstylesClass = Atri._Atri__TextBox74ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox74ClasscustomClass = Atri._Atri__TextBox74ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image16ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image16ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image16Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image16ClassstylesClass = Atri._Atri__Image16ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image16ClasscustomClass = Atri._Atri__Image16ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox75ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox75ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox75Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox75ClassstylesClass = Atri._Atri__TextBox75ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox75ClasscustomClass = Atri._Atri__TextBox75ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex90ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex90Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex90ClassstylesClass = Atri._Atri__Flex90ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex91ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex91Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex91ClassstylesClass = Atri._Atri__Flex91ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox76ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox76ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox76Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox76ClassstylesClass = Atri._Atri__TextBox76ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox76ClasscustomClass = Atri._Atri__TextBox76ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox77ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox77ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox77Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox77ClassstylesClass = Atri._Atri__TextBox77ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox77ClasscustomClass = Atri._Atri__TextBox77ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox78ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox78ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox78Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox78ClassstylesClass = Atri._Atri__TextBox78ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox78ClasscustomClass = Atri._Atri__TextBox78ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image17ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image17ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image17Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image17ClassstylesClass = Atri._Atri__Image17ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image17ClasscustomClass = Atri._Atri__Image17ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox79ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox79ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox79Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox79ClassstylesClass = Atri._Atri__TextBox79ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox79ClasscustomClass = Atri._Atri__TextBox79ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex95ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex95Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex95ClassstylesClass = Atri._Atri__Flex95ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex96ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex96Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex96ClassstylesClass = Atri._Atri__Flex96ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex97ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex97Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex97ClassstylesClass = Atri._Atri__Flex97ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex98ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex98Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex98ClassstylesClass = Atri._Atri__Flex98ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex99ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex99Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex99ClassstylesClass = Atri._Atri__Flex99ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox80ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox80ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox80Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox80ClassstylesClass = Atri._Atri__TextBox80ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox80ClasscustomClass = Atri._Atri__TextBox80ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox81ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox81ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox81Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox81ClassstylesClass = Atri._Atri__TextBox81ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox81ClasscustomClass = Atri._Atri__TextBox81ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox82ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox82ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox82Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox82ClassstylesClass = Atri._Atri__TextBox82ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox82ClasscustomClass = Atri._Atri__TextBox82ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image18ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image18ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image18Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image18ClassstylesClass = Atri._Atri__Image18ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image18ClasscustomClass = Atri._Atri__Image18ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox83ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox83ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox83Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox83ClassstylesClass = Atri._Atri__TextBox83ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox83ClasscustomClass = Atri._Atri__TextBox83ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex100ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex100Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex100ClassstylesClass = Atri._Atri__Flex100ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex101ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex101Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex101ClassstylesClass = Atri._Atri__Flex101ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox84ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox84ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox84Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox84ClassstylesClass = Atri._Atri__TextBox84ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox84ClasscustomClass = Atri._Atri__TextBox84ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox85ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox85ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox85Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox85ClassstylesClass = Atri._Atri__TextBox85ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox85ClasscustomClass = Atri._Atri__TextBox85ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox86ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox86ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox86Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox86ClassstylesClass = Atri._Atri__TextBox86ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox86ClasscustomClass = Atri._Atri__TextBox86ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image19ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image19ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image19Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image19ClassstylesClass = Atri._Atri__Image19ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image19ClasscustomClass = Atri._Atri__Image19ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox87ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox87ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox87Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox87ClassstylesClass = Atri._Atri__TextBox87ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox87ClasscustomClass = Atri._Atri__TextBox87ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex105ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex105Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex105ClassstylesClass = Atri._Atri__Flex105ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex106ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex106Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex106ClassstylesClass = Atri._Atri__Flex106ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox88ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox88ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox88Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox88ClassstylesClass = Atri._Atri__TextBox88ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox88ClasscustomClass = Atri._Atri__TextBox88ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox89ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox89ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox89Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox89ClassstylesClass = Atri._Atri__TextBox89ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox89ClasscustomClass = Atri._Atri__TextBox89ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox90ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox90ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox90Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox90ClassstylesClass = Atri._Atri__TextBox90ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox90ClasscustomClass = Atri._Atri__TextBox90ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image20ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image20ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image20Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image20ClassstylesClass = Atri._Atri__Image20ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image20ClasscustomClass = Atri._Atri__Image20ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox91ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox91ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox91Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox91ClassstylesClass = Atri._Atri__TextBox91ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox91ClasscustomClass = Atri._Atri__TextBox91ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex110ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex110Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex110ClassstylesClass = Atri._Atri__Flex110ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex111ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex111Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex111ClassstylesClass = Atri._Atri__Flex111ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex112ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex112Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex112ClassstylesClass = Atri._Atri__Flex112ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex113ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex113Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex113ClassstylesClass = Atri._Atri__Flex113ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex115ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex115Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex115ClassstylesClass = Atri._Atri__Flex115ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox92ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox92ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox92Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox92ClassstylesClass = Atri._Atri__TextBox92ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox92ClasscustomClass = Atri._Atri__TextBox92ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox93ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox93ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox93Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox93ClassstylesClass = Atri._Atri__TextBox93ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox93ClasscustomClass = Atri._Atri__TextBox93ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex117ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex117Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex117ClassstylesClass = Atri._Atri__Flex117ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Image21ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image21ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image21Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image21ClassstylesClass = Atri._Atri__Image21ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image21ClasscustomClass = Atri._Atri__Image21ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image22ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image22ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image22Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image22ClassstylesClass = Atri._Atri__Image22ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image22ClasscustomClass = Atri._Atri__Image22ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex118ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex118Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex118ClassstylesClass = Atri._Atri__Flex118ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Input1ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Input1ClasscustomClass:
		def __init__(self, state, def_state):

			self.value: str = get_defined_value(state, def_state, "value")
			self.placeholder: str = get_defined_value(state, def_state, "placeholder")
			self.isPasswordField: bool = get_defined_value(state, def_state, "isPasswordField")
	class __Input1Class:
		def __init__(self, state, def_state):
			self.onChange = False
			self.onPressEnter = False
			self.styles: Atri.__Input1ClassstylesClass = Atri._Atri__Input1ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Input1ClasscustomClass = Atri._Atri__Input1ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox94ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox94ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox94Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox94ClassstylesClass = Atri._Atri__TextBox94ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox94ClasscustomClass = Atri._Atri__TextBox94ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex121ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex121Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex121ClassstylesClass = Atri._Atri__Flex121ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex124ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex124Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex124ClassstylesClass = Atri._Atri__Flex124ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Button9ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button9ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button9Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button9ClassstylesClass = Atri._Atri__Button9ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button9ClasscustomClass = Atri._Atri__Button9ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox97ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox97ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox97Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox97ClassstylesClass = Atri._Atri__TextBox97ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox97ClasscustomClass = Atri._Atri__TextBox97ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Input4ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Input4ClasscustomClass:
		def __init__(self, state, def_state):

			self.value: str = get_defined_value(state, def_state, "value")
			self.placeholder: str = get_defined_value(state, def_state, "placeholder")
			self.isPasswordField: bool = get_defined_value(state, def_state, "isPasswordField")
	class __Input4Class:
		def __init__(self, state, def_state):
			self.onChange = False
			self.onPressEnter = False
			self.styles: Atri.__Input4ClassstylesClass = Atri._Atri__Input4ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Input4ClasscustomClass = Atri._Atri__Input4ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex125ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex125Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex125ClassstylesClass = Atri._Atri__Flex125ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox98ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox98ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox98Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox98ClassstylesClass = Atri._Atri__TextBox98ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox98ClasscustomClass = Atri._Atri__TextBox98ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Input5ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Input5ClasscustomClass:
		def __init__(self, state, def_state):

			self.value: str = get_defined_value(state, def_state, "value")
			self.placeholder: str = get_defined_value(state, def_state, "placeholder")
			self.isPasswordField: bool = get_defined_value(state, def_state, "isPasswordField")
	class __Input5Class:
		def __init__(self, state, def_state):
			self.onChange = False
			self.onPressEnter = False
			self.styles: Atri.__Input5ClassstylesClass = Atri._Atri__Input5ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Input5ClasscustomClass = Atri._Atri__Input5ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex126ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex126Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex126ClassstylesClass = Atri._Atri__Flex126ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Image23ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image23ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image23Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image23ClassstylesClass = Atri._Atri__Image23ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image23ClasscustomClass = Atri._Atri__Image23ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox99ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox99ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox99Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox99ClassstylesClass = Atri._Atri__TextBox99ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox99ClasscustomClass = Atri._Atri__TextBox99ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox100ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox100ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox100Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox100ClassstylesClass = Atri._Atri__TextBox100ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox100ClasscustomClass = Atri._Atri__TextBox100ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox101ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox101ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox101Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox101ClassstylesClass = Atri._Atri__TextBox101ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox101ClasscustomClass = Atri._Atri__TextBox101ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image24ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image24ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image24Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image24ClassstylesClass = Atri._Atri__Image24ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image24ClasscustomClass = Atri._Atri__Image24ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox102ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox102ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox102Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox102ClassstylesClass = Atri._Atri__TextBox102ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox102ClasscustomClass = Atri._Atri__TextBox102ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox103ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox103ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox103Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox103ClassstylesClass = Atri._Atri__TextBox103ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox103ClasscustomClass = Atri._Atri__TextBox103ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox104ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox104ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox104Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox104ClassstylesClass = Atri._Atri__TextBox104ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox104ClasscustomClass = Atri._Atri__TextBox104ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image25ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image25ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image25Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image25ClassstylesClass = Atri._Atri__Image25ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image25ClasscustomClass = Atri._Atri__Image25ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox105ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox105ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox105Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox105ClassstylesClass = Atri._Atri__TextBox105ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox105ClasscustomClass = Atri._Atri__TextBox105ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox106ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox106ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox106Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox106ClassstylesClass = Atri._Atri__TextBox106ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox106ClasscustomClass = Atri._Atri__TextBox106ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox107ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox107ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox107Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox107ClassstylesClass = Atri._Atri__TextBox107ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox107ClasscustomClass = Atri._Atri__TextBox107ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox108ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox108ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox108Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox108ClassstylesClass = Atri._Atri__TextBox108ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox108ClasscustomClass = Atri._Atri__TextBox108ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox109ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox109ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox109Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox109ClassstylesClass = Atri._Atri__TextBox109ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox109ClasscustomClass = Atri._Atri__TextBox109ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox110ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox110ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox110Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox110ClassstylesClass = Atri._Atri__TextBox110ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox110ClasscustomClass = Atri._Atri__TextBox110ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image26ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image26ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image26Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image26ClassstylesClass = Atri._Atri__Image26ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image26ClasscustomClass = Atri._Atri__Image26ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex127ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex127Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex127ClassstylesClass = Atri._Atri__Flex127ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex128ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex128Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex128ClassstylesClass = Atri._Atri__Flex128ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox111ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox111ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox111Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox111ClassstylesClass = Atri._Atri__TextBox111ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox111ClasscustomClass = Atri._Atri__TextBox111ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image27ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image27ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image27Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image27ClassstylesClass = Atri._Atri__Image27ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image27ClasscustomClass = Atri._Atri__Image27ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox112ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox112ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox112Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox112ClassstylesClass = Atri._Atri__TextBox112ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox112ClasscustomClass = Atri._Atri__TextBox112ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox113ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox113ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox113Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox113ClassstylesClass = Atri._Atri__TextBox113ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox113ClasscustomClass = Atri._Atri__TextBox113ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox114ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox114ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox114Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox114ClassstylesClass = Atri._Atri__TextBox114ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox114ClasscustomClass = Atri._Atri__TextBox114ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image28ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image28ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image28Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image28ClassstylesClass = Atri._Atri__Image28ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image28ClasscustomClass = Atri._Atri__Image28ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox115ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox115ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox115Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox115ClassstylesClass = Atri._Atri__TextBox115ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox115ClasscustomClass = Atri._Atri__TextBox115ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox116ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox116ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox116Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox116ClassstylesClass = Atri._Atri__TextBox116ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox116ClasscustomClass = Atri._Atri__TextBox116ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox117ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox117ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox117Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox117ClassstylesClass = Atri._Atri__TextBox117ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox117ClasscustomClass = Atri._Atri__TextBox117ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex129ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex129Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex129ClassstylesClass = Atri._Atri__Flex129ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex130ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex130Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex130ClassstylesClass = Atri._Atri__Flex130ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox118ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox118ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox118Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox118ClassstylesClass = Atri._Atri__TextBox118ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox118ClasscustomClass = Atri._Atri__TextBox118ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex131ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex131Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex131ClassstylesClass = Atri._Atri__Flex131ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex132ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex132Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex132ClassstylesClass = Atri._Atri__Flex132ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox119ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox119ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox119Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox119ClassstylesClass = Atri._Atri__TextBox119ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox119ClasscustomClass = Atri._Atri__TextBox119ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox120ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox120ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox120Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox120ClassstylesClass = Atri._Atri__TextBox120ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox120ClasscustomClass = Atri._Atri__TextBox120ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex133ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex133Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex133ClassstylesClass = Atri._Atri__Flex133ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex134ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex134Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex134ClassstylesClass = Atri._Atri__Flex134ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex135ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex135Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex135ClassstylesClass = Atri._Atri__Flex135ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex136ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex136Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex136ClassstylesClass = Atri._Atri__Flex136ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex137ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex137Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex137ClassstylesClass = Atri._Atri__Flex137ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex138ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex138Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex138ClassstylesClass = Atri._Atri__Flex138ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox121ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox121ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox121Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox121ClassstylesClass = Atri._Atri__TextBox121ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox121ClasscustomClass = Atri._Atri__TextBox121ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex139ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex139Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex139ClassstylesClass = Atri._Atri__Flex139ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex140ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex140Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex140ClassstylesClass = Atri._Atri__Flex140ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox122ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox122ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox122Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox122ClassstylesClass = Atri._Atri__TextBox122ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox122ClasscustomClass = Atri._Atri__TextBox122ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex141ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex141Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex141ClassstylesClass = Atri._Atri__Flex141ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex142ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex142Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex142ClassstylesClass = Atri._Atri__Flex142ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex143ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex143Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex143ClassstylesClass = Atri._Atri__Flex143ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex144ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex144Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex144ClassstylesClass = Atri._Atri__Flex144ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex145ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex145Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex145ClassstylesClass = Atri._Atri__Flex145ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex146ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex146Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex146ClassstylesClass = Atri._Atri__Flex146ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex147ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex147Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex147ClassstylesClass = Atri._Atri__Flex147ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex148ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex148Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex148ClassstylesClass = Atri._Atri__Flex148ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex149ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex149Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex149ClassstylesClass = Atri._Atri__Flex149ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex150ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex150Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex150ClassstylesClass = Atri._Atri__Flex150ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex151ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex151Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex151ClassstylesClass = Atri._Atri__Flex151ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex152ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex152Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex152ClassstylesClass = Atri._Atri__Flex152ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex153ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex153Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex153ClassstylesClass = Atri._Atri__Flex153ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex154ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex154Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex154ClassstylesClass = Atri._Atri__Flex154ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex155ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex155Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex155ClassstylesClass = Atri._Atri__Flex155ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex156ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex156Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex156ClassstylesClass = Atri._Atri__Flex156ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox123ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox123ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox123Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox123ClassstylesClass = Atri._Atri__TextBox123ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox123ClasscustomClass = Atri._Atri__TextBox123ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex157ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex157Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex157ClassstylesClass = Atri._Atri__Flex157ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex158ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex158Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex158ClassstylesClass = Atri._Atri__Flex158ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox124ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox124ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox124Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox124ClassstylesClass = Atri._Atri__TextBox124ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox124ClasscustomClass = Atri._Atri__TextBox124ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Button14ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button14ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button14Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button14ClassstylesClass = Atri._Atri__Button14ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button14ClasscustomClass = Atri._Atri__Button14ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex162ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex162Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex162ClassstylesClass = Atri._Atri__Flex162ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox125ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox125ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox125Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox125ClassstylesClass = Atri._Atri__TextBox125ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox125ClasscustomClass = Atri._Atri__TextBox125ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image30ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image30ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image30Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image30ClassstylesClass = Atri._Atri__Image30ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image30ClasscustomClass = Atri._Atri__Image30ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox128ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox128ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox128Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox128ClassstylesClass = Atri._Atri__TextBox128ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox128ClasscustomClass = Atri._Atri__TextBox128ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image31ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image31ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image31Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image31ClassstylesClass = Atri._Atri__Image31ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image31ClasscustomClass = Atri._Atri__Image31ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox129ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox129ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox129Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox129ClassstylesClass = Atri._Atri__TextBox129ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox129ClasscustomClass = Atri._Atri__TextBox129ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox130ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox130ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox130Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox130ClassstylesClass = Atri._Atri__TextBox130ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox130ClasscustomClass = Atri._Atri__TextBox130ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox131ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox131ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox131Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox131ClassstylesClass = Atri._Atri__TextBox131ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox131ClasscustomClass = Atri._Atri__TextBox131ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex163ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex163Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex163ClassstylesClass = Atri._Atri__Flex163ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex164ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex164Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex164ClassstylesClass = Atri._Atri__Flex164ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox132ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox132ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox132Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox132ClassstylesClass = Atri._Atri__TextBox132ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox132ClasscustomClass = Atri._Atri__TextBox132ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image32ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image32ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image32Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image32ClassstylesClass = Atri._Atri__Image32ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image32ClasscustomClass = Atri._Atri__Image32ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox133ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox133ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox133Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox133ClassstylesClass = Atri._Atri__TextBox133ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox133ClasscustomClass = Atri._Atri__TextBox133ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox134ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox134ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox134Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox134ClassstylesClass = Atri._Atri__TextBox134ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox134ClasscustomClass = Atri._Atri__TextBox134ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox135ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox135ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox135Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox135ClassstylesClass = Atri._Atri__TextBox135ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox135ClasscustomClass = Atri._Atri__TextBox135ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex168ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex168Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex168ClassstylesClass = Atri._Atri__Flex168ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex169ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex169Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex169ClassstylesClass = Atri._Atri__Flex169ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox136ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox136ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox136Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox136ClassstylesClass = Atri._Atri__TextBox136ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox136ClasscustomClass = Atri._Atri__TextBox136ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image33ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image33ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image33Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image33ClassstylesClass = Atri._Atri__Image33ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image33ClasscustomClass = Atri._Atri__Image33ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox137ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox137ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox137Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox137ClassstylesClass = Atri._Atri__TextBox137ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox137ClasscustomClass = Atri._Atri__TextBox137ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox138ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox138ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox138Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox138ClassstylesClass = Atri._Atri__TextBox138ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox138ClasscustomClass = Atri._Atri__TextBox138ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox139ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox139ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox139Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox139ClassstylesClass = Atri._Atri__TextBox139ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox139ClasscustomClass = Atri._Atri__TextBox139ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex173ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex173Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex173ClassstylesClass = Atri._Atri__Flex173ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex174ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex174Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex174ClassstylesClass = Atri._Atri__Flex174ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox140ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox140ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox140Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox140ClassstylesClass = Atri._Atri__TextBox140ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox140ClasscustomClass = Atri._Atri__TextBox140ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox141ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox141ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox141Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox141ClassstylesClass = Atri._Atri__TextBox141ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox141ClasscustomClass = Atri._Atri__TextBox141ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox142ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox142ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox142Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox142ClassstylesClass = Atri._Atri__TextBox142ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox142ClasscustomClass = Atri._Atri__TextBox142ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox143ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox143ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox143Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox143ClassstylesClass = Atri._Atri__TextBox143ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox143ClasscustomClass = Atri._Atri__TextBox143ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image34ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image34ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image34Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image34ClassstylesClass = Atri._Atri__Image34ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image34ClasscustomClass = Atri._Atri__Image34ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox145ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox145ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox145Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox145ClassstylesClass = Atri._Atri__TextBox145ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox145ClasscustomClass = Atri._Atri__TextBox145ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox146ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox146ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox146Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox146ClassstylesClass = Atri._Atri__TextBox146ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox146ClasscustomClass = Atri._Atri__TextBox146ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox147ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox147ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox147Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox147ClassstylesClass = Atri._Atri__TextBox147ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox147ClasscustomClass = Atri._Atri__TextBox147ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image35ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image35ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image35Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image35ClassstylesClass = Atri._Atri__Image35ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image35ClasscustomClass = Atri._Atri__Image35ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox148ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox148ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox148Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox148ClassstylesClass = Atri._Atri__TextBox148ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox148ClasscustomClass = Atri._Atri__TextBox148ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex183ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex183Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex183ClassstylesClass = Atri._Atri__Flex183ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex184ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex184Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex184ClassstylesClass = Atri._Atri__Flex184ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox149ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox149ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox149Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox149ClassstylesClass = Atri._Atri__TextBox149ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox149ClasscustomClass = Atri._Atri__TextBox149ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox150ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox150ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox150Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox150ClassstylesClass = Atri._Atri__TextBox150ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox150ClasscustomClass = Atri._Atri__TextBox150ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox151ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox151ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox151Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox151ClassstylesClass = Atri._Atri__TextBox151ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox151ClasscustomClass = Atri._Atri__TextBox151ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image36ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image36ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image36Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image36ClassstylesClass = Atri._Atri__Image36ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image36ClasscustomClass = Atri._Atri__Image36ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox152ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox152ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox152Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox152ClassstylesClass = Atri._Atri__TextBox152ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox152ClasscustomClass = Atri._Atri__TextBox152ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex188ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex188Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex188ClassstylesClass = Atri._Atri__Flex188ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex189ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex189Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex189ClassstylesClass = Atri._Atri__Flex189ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex190ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex190Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex190ClassstylesClass = Atri._Atri__Flex190ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex191ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex191Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex191ClassstylesClass = Atri._Atri__Flex191ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex192ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex192Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex192ClassstylesClass = Atri._Atri__Flex192ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox153ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox153ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox153Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox153ClassstylesClass = Atri._Atri__TextBox153ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox153ClasscustomClass = Atri._Atri__TextBox153ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox154ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox154ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox154Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox154ClassstylesClass = Atri._Atri__TextBox154ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox154ClasscustomClass = Atri._Atri__TextBox154ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox155ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox155ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox155Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox155ClassstylesClass = Atri._Atri__TextBox155ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox155ClasscustomClass = Atri._Atri__TextBox155ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image37ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image37ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image37Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image37ClassstylesClass = Atri._Atri__Image37ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image37ClasscustomClass = Atri._Atri__Image37ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox156ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox156ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox156Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox156ClassstylesClass = Atri._Atri__TextBox156ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox156ClasscustomClass = Atri._Atri__TextBox156ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex193ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex193Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex193ClassstylesClass = Atri._Atri__Flex193ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex194ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex194Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex194ClassstylesClass = Atri._Atri__Flex194ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex195ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex195Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex195ClassstylesClass = Atri._Atri__Flex195ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex196ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex196Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex196ClassstylesClass = Atri._Atri__Flex196ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex197ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex197Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex197ClassstylesClass = Atri._Atri__Flex197ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Image38ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image38ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image38Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image38ClassstylesClass = Atri._Atri__Image38ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image38ClasscustomClass = Atri._Atri__Image38ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox157ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox157ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox157Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox157ClassstylesClass = Atri._Atri__TextBox157ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox157ClasscustomClass = Atri._Atri__TextBox157ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox158ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox158ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox158Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox158ClassstylesClass = Atri._Atri__TextBox158ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox158ClasscustomClass = Atri._Atri__TextBox158ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox159ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox159ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox159Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox159ClassstylesClass = Atri._Atri__TextBox159ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox159ClasscustomClass = Atri._Atri__TextBox159ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex198ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex198Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex198ClassstylesClass = Atri._Atri__Flex198ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex199ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex199Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex199ClassstylesClass = Atri._Atri__Flex199ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox160ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox160ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox160Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox160ClassstylesClass = Atri._Atri__TextBox160ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox160ClasscustomClass = Atri._Atri__TextBox160ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex200ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex200Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex200ClassstylesClass = Atri._Atri__Flex200ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex201ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex201Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex201ClassstylesClass = Atri._Atri__Flex201ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex202ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex202Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex202ClassstylesClass = Atri._Atri__Flex202ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Image39ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image39ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image39Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image39ClassstylesClass = Atri._Atri__Image39ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image39ClasscustomClass = Atri._Atri__Image39ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox161ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox161ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox161Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox161ClassstylesClass = Atri._Atri__TextBox161ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox161ClasscustomClass = Atri._Atri__TextBox161ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox162ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox162ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox162Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox162ClassstylesClass = Atri._Atri__TextBox162ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox162ClasscustomClass = Atri._Atri__TextBox162ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox163ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox163ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox163Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox163ClassstylesClass = Atri._Atri__TextBox163ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox163ClasscustomClass = Atri._Atri__TextBox163ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex203ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex203Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex203ClassstylesClass = Atri._Atri__Flex203ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex204ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex204Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex204ClassstylesClass = Atri._Atri__Flex204ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox164ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox164ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox164Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox164ClassstylesClass = Atri._Atri__TextBox164ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox164ClasscustomClass = Atri._Atri__TextBox164ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex205ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex205Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex205ClassstylesClass = Atri._Atri__Flex205ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex206ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex206Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex206ClassstylesClass = Atri._Atri__Flex206ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex207ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex207Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex207ClassstylesClass = Atri._Atri__Flex207ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])