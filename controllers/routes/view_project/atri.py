import json
from typing import List, Any, Optional
from fastapi import UploadFile
default_state = json.loads('{"TextBox165":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox166":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox167":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Button15":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"Flex208":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox168":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex209":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Menu4":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"open":true,"iconHeight":24,"iconWidth":24,"src":"","strokeColor":"","gap":0,"alignRight":false}},"TextBox169":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox170":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex214":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox171":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox172":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox173":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Button16":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"Flex215":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox174":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex216":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Menu5":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"open":true,"iconHeight":24,"iconWidth":24,"src":"","strokeColor":"","gap":0,"alignRight":false}},"TextBox175":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox176":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox177":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Button17":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"Flex220":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox178":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex221":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Menu6":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"open":true,"iconHeight":24,"iconWidth":24,"src":"","strokeColor":"","gap":0,"alignRight":false}},"Flex222":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex223":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex224":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex225":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex226":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Upload2":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"multiple":false,"showFilename":true,"text":"Upload","disabled":false}},"Image40":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}}}')
def get_defined_value(state, def_state, key):
	return state[key] if key in state else def_state[key]
class Atri:
	def __init__(self, state: Any):
		self.event_data = None
		global default_state
		self.TextBox165 = self.__TextBox165Class(state["TextBox165"], default_state["TextBox165"])
		self.TextBox166 = self.__TextBox166Class(state["TextBox166"], default_state["TextBox166"])
		self.TextBox167 = self.__TextBox167Class(state["TextBox167"], default_state["TextBox167"])
		self.Button15 = self.__Button15Class(state["Button15"], default_state["Button15"])
		self.Flex208 = self.__Flex208Class(state["Flex208"], default_state["Flex208"])
		self.TextBox168 = self.__TextBox168Class(state["TextBox168"], default_state["TextBox168"])
		self.Flex209 = self.__Flex209Class(state["Flex209"], default_state["Flex209"])
		self.Menu4 = self.__Menu4Class(state["Menu4"], default_state["Menu4"])
		self.TextBox169 = self.__TextBox169Class(state["TextBox169"], default_state["TextBox169"])
		self.TextBox170 = self.__TextBox170Class(state["TextBox170"], default_state["TextBox170"])
		self.Flex214 = self.__Flex214Class(state["Flex214"], default_state["Flex214"])
		self.TextBox171 = self.__TextBox171Class(state["TextBox171"], default_state["TextBox171"])
		self.TextBox172 = self.__TextBox172Class(state["TextBox172"], default_state["TextBox172"])
		self.TextBox173 = self.__TextBox173Class(state["TextBox173"], default_state["TextBox173"])
		self.Button16 = self.__Button16Class(state["Button16"], default_state["Button16"])
		self.Flex215 = self.__Flex215Class(state["Flex215"], default_state["Flex215"])
		self.TextBox174 = self.__TextBox174Class(state["TextBox174"], default_state["TextBox174"])
		self.Flex216 = self.__Flex216Class(state["Flex216"], default_state["Flex216"])
		self.Menu5 = self.__Menu5Class(state["Menu5"], default_state["Menu5"])
		self.TextBox175 = self.__TextBox175Class(state["TextBox175"], default_state["TextBox175"])
		self.TextBox176 = self.__TextBox176Class(state["TextBox176"], default_state["TextBox176"])
		self.TextBox177 = self.__TextBox177Class(state["TextBox177"], default_state["TextBox177"])
		self.Button17 = self.__Button17Class(state["Button17"], default_state["Button17"])
		self.Flex220 = self.__Flex220Class(state["Flex220"], default_state["Flex220"])
		self.TextBox178 = self.__TextBox178Class(state["TextBox178"], default_state["TextBox178"])
		self.Flex221 = self.__Flex221Class(state["Flex221"], default_state["Flex221"])
		self.Menu6 = self.__Menu6Class(state["Menu6"], default_state["Menu6"])
		self.Flex222 = self.__Flex222Class(state["Flex222"], default_state["Flex222"])
		self.Flex223 = self.__Flex223Class(state["Flex223"], default_state["Flex223"])
		self.Flex224 = self.__Flex224Class(state["Flex224"], default_state["Flex224"])
		self.Flex225 = self.__Flex225Class(state["Flex225"], default_state["Flex225"])
		self.Flex226 = self.__Flex226Class(state["Flex226"], default_state["Flex226"])
		self.Upload2 = self.__Upload2Class(state["Upload2"], default_state["Upload2"])
		self.Image40 = self.__Image40Class(state["Image40"], default_state["Image40"])
	def set_event(self, event):
		self.event_data = event["event_data"]
		alias = event["alias"]
		callback_name = event["callback_name"]
		comp = getattr(self, alias)
		setattr(comp, callback_name, True)
	class __TextBox165ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox165ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox165Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox165ClassstylesClass = Atri._Atri__TextBox165ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox165ClasscustomClass = Atri._Atri__TextBox165ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox166ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox166ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox166Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox166ClassstylesClass = Atri._Atri__TextBox166ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox166ClasscustomClass = Atri._Atri__TextBox166ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox167ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox167ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox167Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox167ClassstylesClass = Atri._Atri__TextBox167ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox167ClasscustomClass = Atri._Atri__TextBox167ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Button15ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button15ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button15Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button15ClassstylesClass = Atri._Atri__Button15ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button15ClasscustomClass = Atri._Atri__Button15ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex208ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex208Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex208ClassstylesClass = Atri._Atri__Flex208ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox168ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox168ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox168Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox168ClassstylesClass = Atri._Atri__TextBox168ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox168ClasscustomClass = Atri._Atri__TextBox168ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex209ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex209Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex209ClassstylesClass = Atri._Atri__Flex209ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Menu4ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Menu4ClasscustomClass:
		def __init__(self, state, def_state):

			self.open: bool = get_defined_value(state, def_state, "open")
			self.iconHeight: int = get_defined_value(state, def_state, "iconHeight")
			self.iconWidth: int = get_defined_value(state, def_state, "iconWidth")
			self.src: str = get_defined_value(state, def_state, "src")
			self.strokeColor: str = get_defined_value(state, def_state, "strokeColor")
			self.gap: int = get_defined_value(state, def_state, "gap")
			self.alignRight: bool = get_defined_value(state, def_state, "alignRight")
	class __Menu4Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Menu4ClassstylesClass = Atri._Atri__Menu4ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Menu4ClasscustomClass = Atri._Atri__Menu4ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox169ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox169ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox169Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox169ClassstylesClass = Atri._Atri__TextBox169ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox169ClasscustomClass = Atri._Atri__TextBox169ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox170ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox170ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox170Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox170ClassstylesClass = Atri._Atri__TextBox170ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox170ClasscustomClass = Atri._Atri__TextBox170ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex214ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex214Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex214ClassstylesClass = Atri._Atri__Flex214ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox171ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox171ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox171Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox171ClassstylesClass = Atri._Atri__TextBox171ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox171ClasscustomClass = Atri._Atri__TextBox171ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox172ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox172ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox172Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox172ClassstylesClass = Atri._Atri__TextBox172ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox172ClasscustomClass = Atri._Atri__TextBox172ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox173ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox173ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox173Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox173ClassstylesClass = Atri._Atri__TextBox173ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox173ClasscustomClass = Atri._Atri__TextBox173ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Button16ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button16ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button16Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button16ClassstylesClass = Atri._Atri__Button16ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button16ClasscustomClass = Atri._Atri__Button16ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex215ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex215Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex215ClassstylesClass = Atri._Atri__Flex215ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox174ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox174ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox174Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox174ClassstylesClass = Atri._Atri__TextBox174ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox174ClasscustomClass = Atri._Atri__TextBox174ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex216ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex216Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex216ClassstylesClass = Atri._Atri__Flex216ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Menu5ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Menu5ClasscustomClass:
		def __init__(self, state, def_state):

			self.open: bool = get_defined_value(state, def_state, "open")
			self.iconHeight: int = get_defined_value(state, def_state, "iconHeight")
			self.iconWidth: int = get_defined_value(state, def_state, "iconWidth")
			self.src: str = get_defined_value(state, def_state, "src")
			self.strokeColor: str = get_defined_value(state, def_state, "strokeColor")
			self.gap: int = get_defined_value(state, def_state, "gap")
			self.alignRight: bool = get_defined_value(state, def_state, "alignRight")
	class __Menu5Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Menu5ClassstylesClass = Atri._Atri__Menu5ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Menu5ClasscustomClass = Atri._Atri__Menu5ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox175ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox175ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox175Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox175ClassstylesClass = Atri._Atri__TextBox175ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox175ClasscustomClass = Atri._Atri__TextBox175ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox176ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox176ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox176Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox176ClassstylesClass = Atri._Atri__TextBox176ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox176ClasscustomClass = Atri._Atri__TextBox176ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox177ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox177ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox177Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox177ClassstylesClass = Atri._Atri__TextBox177ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox177ClasscustomClass = Atri._Atri__TextBox177ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Button17ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button17ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button17Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button17ClassstylesClass = Atri._Atri__Button17ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button17ClasscustomClass = Atri._Atri__Button17ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex220ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex220Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex220ClassstylesClass = Atri._Atri__Flex220ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox178ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox178ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox178Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox178ClassstylesClass = Atri._Atri__TextBox178ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox178ClasscustomClass = Atri._Atri__TextBox178ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex221ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex221Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex221ClassstylesClass = Atri._Atri__Flex221ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Menu6ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Menu6ClasscustomClass:
		def __init__(self, state, def_state):

			self.open: bool = get_defined_value(state, def_state, "open")
			self.iconHeight: int = get_defined_value(state, def_state, "iconHeight")
			self.iconWidth: int = get_defined_value(state, def_state, "iconWidth")
			self.src: str = get_defined_value(state, def_state, "src")
			self.strokeColor: str = get_defined_value(state, def_state, "strokeColor")
			self.gap: int = get_defined_value(state, def_state, "gap")
			self.alignRight: bool = get_defined_value(state, def_state, "alignRight")
	class __Menu6Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Menu6ClassstylesClass = Atri._Atri__Menu6ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Menu6ClasscustomClass = Atri._Atri__Menu6ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex222ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex222Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex222ClassstylesClass = Atri._Atri__Flex222ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex223ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex223Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex223ClassstylesClass = Atri._Atri__Flex223ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex224ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex224Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex224ClassstylesClass = Atri._Atri__Flex224ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex225ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex225Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex225ClassstylesClass = Atri._Atri__Flex225ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex226ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex226Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex226ClassstylesClass = Atri._Atri__Flex226ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Upload2ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Upload2ClasscustomClass:
		def __init__(self, state, def_state):

			self.multiple: bool = get_defined_value(state, def_state, "multiple")
			self.showFilename: bool = get_defined_value(state, def_state, "showFilename")
			self.text: str = get_defined_value(state, def_state, "text")
			self.disabled: bool = get_defined_value(state, def_state, "disabled")
	class __Upload2ClassioClass:
		def __init__(self):

			self.files: Optional[List[UploadFile]] = None
	class __Upload2Class:
		def __init__(self, state, def_state):
			self.onChange = False
			self.onClick = False
			self.styles: Atri.__Upload2ClassstylesClass = Atri._Atri__Upload2ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Upload2ClasscustomClass = Atri._Atri__Upload2ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
			self.io: Atri.__Upload2ClassioClass = Atri._Atri__Upload2ClassioClass()
	class __Image40ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image40ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image40Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image40ClassstylesClass = Atri._Atri__Image40ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image40ClasscustomClass = Atri._Atri__Image40ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])