import json
from typing import List, Any, Optional
from fastapi import UploadFile
default_state = json.loads('{"TextBox165":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox166":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox167":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Button15":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"Flex208":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox168":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex209":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Menu4":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"open":true,"iconHeight":24,"iconWidth":24,"src":"","strokeColor":"","gap":0,"alignRight":false}},"TextBox169":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox171":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox172":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox173":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Button16":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"Flex215":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox174":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex216":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Menu5":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"open":true,"iconHeight":24,"iconWidth":24,"src":"","strokeColor":"","gap":0,"alignRight":false}},"TextBox175":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox176":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox177":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Button17":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"Flex220":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox178":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex221":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Menu6":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"open":true,"iconHeight":24,"iconWidth":24,"src":"","strokeColor":"","gap":0,"alignRight":false}},"Flex226":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Upload2":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"multiple":false,"showFilename":true,"text":"Upload","disabled":false}},"Image40":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"Flex229":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Image42":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox182":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Image43":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"Flex232":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox183":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox184":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox185":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Button20":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"Flex233":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox186":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex234":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Menu7":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"open":true,"iconHeight":24,"iconWidth":24,"src":"","strokeColor":"","gap":0,"alignRight":false}},"TextBox187":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox188":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox189":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Button21":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"Flex238":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox190":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex239":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Menu8":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"open":true,"iconHeight":24,"iconWidth":24,"src":"","strokeColor":"","gap":0,"alignRight":false}},"TextBox191":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox192":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox193":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Button22":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"Flex243":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox194":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex244":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Menu9":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"open":true,"iconHeight":24,"iconWidth":24,"src":"","strokeColor":"","gap":0,"alignRight":false}},"TextBox195":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox196":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox197":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Button23":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"Flex248":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox198":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex249":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Menu10":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"open":true,"iconHeight":24,"iconWidth":24,"src":"","strokeColor":"","gap":0,"alignRight":false}},"Button35":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"TextBox225":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox226":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Button36":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"TextBox227":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Button37":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"TextBox228":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Button38":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"Upload5":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"multiple":false,"showFilename":true,"text":"Upload","disabled":false}},"Image48":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox229":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox230":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox231":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox232":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex289":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex290":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex291":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex292":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex293":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex294":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex295":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Button39":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"TextBox233":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox234":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Button40":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"TextBox235":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Button41":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"TextBox236":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Button42":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"Upload6":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"multiple":false,"showFilename":true,"text":"Upload","disabled":false}},"Image49":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox237":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox238":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox239":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox240":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex299":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex300":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex301":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex302":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex303":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex304":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex305":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Button43":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"TextBox243":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox244":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Button44":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"TextBox245":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Button45":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"TextBox246":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Button46":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"Upload8":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"multiple":false,"showFilename":true,"text":"Upload","disabled":false}},"Image51":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox247":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox248":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox249":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox250":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex313":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex314":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex315":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex316":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex317":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex318":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex319":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex320":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex321":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox251":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex322":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex324":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Button56":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"Button57":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"Button58":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"TextBox263":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox265":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Button59":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"Button60":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"Button61":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"TextBox267":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Button62":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"Button63":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"Button64":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}}}')
def get_defined_value(state, def_state, key):
	return state[key] if key in state else def_state[key]
class Atri:
	def __init__(self, state: Any):
		self.event_data = None
		global default_state
		self.TextBox165 = self.__TextBox165Class(state["TextBox165"], default_state["TextBox165"])
		self.TextBox166 = self.__TextBox166Class(state["TextBox166"], default_state["TextBox166"])
		self.TextBox167 = self.__TextBox167Class(state["TextBox167"], default_state["TextBox167"])
		self.Button15 = self.__Button15Class(state["Button15"], default_state["Button15"])
		self.Flex208 = self.__Flex208Class(state["Flex208"], default_state["Flex208"])
		self.TextBox168 = self.__TextBox168Class(state["TextBox168"], default_state["TextBox168"])
		self.Flex209 = self.__Flex209Class(state["Flex209"], default_state["Flex209"])
		self.Menu4 = self.__Menu4Class(state["Menu4"], default_state["Menu4"])
		self.TextBox169 = self.__TextBox169Class(state["TextBox169"], default_state["TextBox169"])
		self.TextBox171 = self.__TextBox171Class(state["TextBox171"], default_state["TextBox171"])
		self.TextBox172 = self.__TextBox172Class(state["TextBox172"], default_state["TextBox172"])
		self.TextBox173 = self.__TextBox173Class(state["TextBox173"], default_state["TextBox173"])
		self.Button16 = self.__Button16Class(state["Button16"], default_state["Button16"])
		self.Flex215 = self.__Flex215Class(state["Flex215"], default_state["Flex215"])
		self.TextBox174 = self.__TextBox174Class(state["TextBox174"], default_state["TextBox174"])
		self.Flex216 = self.__Flex216Class(state["Flex216"], default_state["Flex216"])
		self.Menu5 = self.__Menu5Class(state["Menu5"], default_state["Menu5"])
		self.TextBox175 = self.__TextBox175Class(state["TextBox175"], default_state["TextBox175"])
		self.TextBox176 = self.__TextBox176Class(state["TextBox176"], default_state["TextBox176"])
		self.TextBox177 = self.__TextBox177Class(state["TextBox177"], default_state["TextBox177"])
		self.Button17 = self.__Button17Class(state["Button17"], default_state["Button17"])
		self.Flex220 = self.__Flex220Class(state["Flex220"], default_state["Flex220"])
		self.TextBox178 = self.__TextBox178Class(state["TextBox178"], default_state["TextBox178"])
		self.Flex221 = self.__Flex221Class(state["Flex221"], default_state["Flex221"])
		self.Menu6 = self.__Menu6Class(state["Menu6"], default_state["Menu6"])
		self.Flex226 = self.__Flex226Class(state["Flex226"], default_state["Flex226"])
		self.Upload2 = self.__Upload2Class(state["Upload2"], default_state["Upload2"])
		self.Image40 = self.__Image40Class(state["Image40"], default_state["Image40"])
		self.Flex229 = self.__Flex229Class(state["Flex229"], default_state["Flex229"])
		self.Image42 = self.__Image42Class(state["Image42"], default_state["Image42"])
		self.TextBox182 = self.__TextBox182Class(state["TextBox182"], default_state["TextBox182"])
		self.Image43 = self.__Image43Class(state["Image43"], default_state["Image43"])
		self.Flex232 = self.__Flex232Class(state["Flex232"], default_state["Flex232"])
		self.TextBox183 = self.__TextBox183Class(state["TextBox183"], default_state["TextBox183"])
		self.TextBox184 = self.__TextBox184Class(state["TextBox184"], default_state["TextBox184"])
		self.TextBox185 = self.__TextBox185Class(state["TextBox185"], default_state["TextBox185"])
		self.Button20 = self.__Button20Class(state["Button20"], default_state["Button20"])
		self.Flex233 = self.__Flex233Class(state["Flex233"], default_state["Flex233"])
		self.TextBox186 = self.__TextBox186Class(state["TextBox186"], default_state["TextBox186"])
		self.Flex234 = self.__Flex234Class(state["Flex234"], default_state["Flex234"])
		self.Menu7 = self.__Menu7Class(state["Menu7"], default_state["Menu7"])
		self.TextBox187 = self.__TextBox187Class(state["TextBox187"], default_state["TextBox187"])
		self.TextBox188 = self.__TextBox188Class(state["TextBox188"], default_state["TextBox188"])
		self.TextBox189 = self.__TextBox189Class(state["TextBox189"], default_state["TextBox189"])
		self.Button21 = self.__Button21Class(state["Button21"], default_state["Button21"])
		self.Flex238 = self.__Flex238Class(state["Flex238"], default_state["Flex238"])
		self.TextBox190 = self.__TextBox190Class(state["TextBox190"], default_state["TextBox190"])
		self.Flex239 = self.__Flex239Class(state["Flex239"], default_state["Flex239"])
		self.Menu8 = self.__Menu8Class(state["Menu8"], default_state["Menu8"])
		self.TextBox191 = self.__TextBox191Class(state["TextBox191"], default_state["TextBox191"])
		self.TextBox192 = self.__TextBox192Class(state["TextBox192"], default_state["TextBox192"])
		self.TextBox193 = self.__TextBox193Class(state["TextBox193"], default_state["TextBox193"])
		self.Button22 = self.__Button22Class(state["Button22"], default_state["Button22"])
		self.Flex243 = self.__Flex243Class(state["Flex243"], default_state["Flex243"])
		self.TextBox194 = self.__TextBox194Class(state["TextBox194"], default_state["TextBox194"])
		self.Flex244 = self.__Flex244Class(state["Flex244"], default_state["Flex244"])
		self.Menu9 = self.__Menu9Class(state["Menu9"], default_state["Menu9"])
		self.TextBox195 = self.__TextBox195Class(state["TextBox195"], default_state["TextBox195"])
		self.TextBox196 = self.__TextBox196Class(state["TextBox196"], default_state["TextBox196"])
		self.TextBox197 = self.__TextBox197Class(state["TextBox197"], default_state["TextBox197"])
		self.Button23 = self.__Button23Class(state["Button23"], default_state["Button23"])
		self.Flex248 = self.__Flex248Class(state["Flex248"], default_state["Flex248"])
		self.TextBox198 = self.__TextBox198Class(state["TextBox198"], default_state["TextBox198"])
		self.Flex249 = self.__Flex249Class(state["Flex249"], default_state["Flex249"])
		self.Menu10 = self.__Menu10Class(state["Menu10"], default_state["Menu10"])
		self.Button35 = self.__Button35Class(state["Button35"], default_state["Button35"])
		self.TextBox225 = self.__TextBox225Class(state["TextBox225"], default_state["TextBox225"])
		self.TextBox226 = self.__TextBox226Class(state["TextBox226"], default_state["TextBox226"])
		self.Button36 = self.__Button36Class(state["Button36"], default_state["Button36"])
		self.TextBox227 = self.__TextBox227Class(state["TextBox227"], default_state["TextBox227"])
		self.Button37 = self.__Button37Class(state["Button37"], default_state["Button37"])
		self.TextBox228 = self.__TextBox228Class(state["TextBox228"], default_state["TextBox228"])
		self.Button38 = self.__Button38Class(state["Button38"], default_state["Button38"])
		self.Upload5 = self.__Upload5Class(state["Upload5"], default_state["Upload5"])
		self.Image48 = self.__Image48Class(state["Image48"], default_state["Image48"])
		self.TextBox229 = self.__TextBox229Class(state["TextBox229"], default_state["TextBox229"])
		self.TextBox230 = self.__TextBox230Class(state["TextBox230"], default_state["TextBox230"])
		self.TextBox231 = self.__TextBox231Class(state["TextBox231"], default_state["TextBox231"])
		self.TextBox232 = self.__TextBox232Class(state["TextBox232"], default_state["TextBox232"])
		self.Flex289 = self.__Flex289Class(state["Flex289"], default_state["Flex289"])
		self.Flex290 = self.__Flex290Class(state["Flex290"], default_state["Flex290"])
		self.Flex291 = self.__Flex291Class(state["Flex291"], default_state["Flex291"])
		self.Flex292 = self.__Flex292Class(state["Flex292"], default_state["Flex292"])
		self.Flex293 = self.__Flex293Class(state["Flex293"], default_state["Flex293"])
		self.Flex294 = self.__Flex294Class(state["Flex294"], default_state["Flex294"])
		self.Flex295 = self.__Flex295Class(state["Flex295"], default_state["Flex295"])
		self.Button39 = self.__Button39Class(state["Button39"], default_state["Button39"])
		self.TextBox233 = self.__TextBox233Class(state["TextBox233"], default_state["TextBox233"])
		self.TextBox234 = self.__TextBox234Class(state["TextBox234"], default_state["TextBox234"])
		self.Button40 = self.__Button40Class(state["Button40"], default_state["Button40"])
		self.TextBox235 = self.__TextBox235Class(state["TextBox235"], default_state["TextBox235"])
		self.Button41 = self.__Button41Class(state["Button41"], default_state["Button41"])
		self.TextBox236 = self.__TextBox236Class(state["TextBox236"], default_state["TextBox236"])
		self.Button42 = self.__Button42Class(state["Button42"], default_state["Button42"])
		self.Upload6 = self.__Upload6Class(state["Upload6"], default_state["Upload6"])
		self.Image49 = self.__Image49Class(state["Image49"], default_state["Image49"])
		self.TextBox237 = self.__TextBox237Class(state["TextBox237"], default_state["TextBox237"])
		self.TextBox238 = self.__TextBox238Class(state["TextBox238"], default_state["TextBox238"])
		self.TextBox239 = self.__TextBox239Class(state["TextBox239"], default_state["TextBox239"])
		self.TextBox240 = self.__TextBox240Class(state["TextBox240"], default_state["TextBox240"])
		self.Flex299 = self.__Flex299Class(state["Flex299"], default_state["Flex299"])
		self.Flex300 = self.__Flex300Class(state["Flex300"], default_state["Flex300"])
		self.Flex301 = self.__Flex301Class(state["Flex301"], default_state["Flex301"])
		self.Flex302 = self.__Flex302Class(state["Flex302"], default_state["Flex302"])
		self.Flex303 = self.__Flex303Class(state["Flex303"], default_state["Flex303"])
		self.Flex304 = self.__Flex304Class(state["Flex304"], default_state["Flex304"])
		self.Flex305 = self.__Flex305Class(state["Flex305"], default_state["Flex305"])
		self.Button43 = self.__Button43Class(state["Button43"], default_state["Button43"])
		self.TextBox243 = self.__TextBox243Class(state["TextBox243"], default_state["TextBox243"])
		self.TextBox244 = self.__TextBox244Class(state["TextBox244"], default_state["TextBox244"])
		self.Button44 = self.__Button44Class(state["Button44"], default_state["Button44"])
		self.TextBox245 = self.__TextBox245Class(state["TextBox245"], default_state["TextBox245"])
		self.Button45 = self.__Button45Class(state["Button45"], default_state["Button45"])
		self.TextBox246 = self.__TextBox246Class(state["TextBox246"], default_state["TextBox246"])
		self.Button46 = self.__Button46Class(state["Button46"], default_state["Button46"])
		self.Upload8 = self.__Upload8Class(state["Upload8"], default_state["Upload8"])
		self.Image51 = self.__Image51Class(state["Image51"], default_state["Image51"])
		self.TextBox247 = self.__TextBox247Class(state["TextBox247"], default_state["TextBox247"])
		self.TextBox248 = self.__TextBox248Class(state["TextBox248"], default_state["TextBox248"])
		self.TextBox249 = self.__TextBox249Class(state["TextBox249"], default_state["TextBox249"])
		self.TextBox250 = self.__TextBox250Class(state["TextBox250"], default_state["TextBox250"])
		self.Flex313 = self.__Flex313Class(state["Flex313"], default_state["Flex313"])
		self.Flex314 = self.__Flex314Class(state["Flex314"], default_state["Flex314"])
		self.Flex315 = self.__Flex315Class(state["Flex315"], default_state["Flex315"])
		self.Flex316 = self.__Flex316Class(state["Flex316"], default_state["Flex316"])
		self.Flex317 = self.__Flex317Class(state["Flex317"], default_state["Flex317"])
		self.Flex318 = self.__Flex318Class(state["Flex318"], default_state["Flex318"])
		self.Flex319 = self.__Flex319Class(state["Flex319"], default_state["Flex319"])
		self.Flex320 = self.__Flex320Class(state["Flex320"], default_state["Flex320"])
		self.Flex321 = self.__Flex321Class(state["Flex321"], default_state["Flex321"])
		self.TextBox251 = self.__TextBox251Class(state["TextBox251"], default_state["TextBox251"])
		self.Flex322 = self.__Flex322Class(state["Flex322"], default_state["Flex322"])
		self.Flex324 = self.__Flex324Class(state["Flex324"], default_state["Flex324"])
		self.Button56 = self.__Button56Class(state["Button56"], default_state["Button56"])
		self.Button57 = self.__Button57Class(state["Button57"], default_state["Button57"])
		self.Button58 = self.__Button58Class(state["Button58"], default_state["Button58"])
		self.TextBox263 = self.__TextBox263Class(state["TextBox263"], default_state["TextBox263"])
		self.TextBox265 = self.__TextBox265Class(state["TextBox265"], default_state["TextBox265"])
		self.Button59 = self.__Button59Class(state["Button59"], default_state["Button59"])
		self.Button60 = self.__Button60Class(state["Button60"], default_state["Button60"])
		self.Button61 = self.__Button61Class(state["Button61"], default_state["Button61"])
		self.TextBox267 = self.__TextBox267Class(state["TextBox267"], default_state["TextBox267"])
		self.Button62 = self.__Button62Class(state["Button62"], default_state["Button62"])
		self.Button63 = self.__Button63Class(state["Button63"], default_state["Button63"])
		self.Button64 = self.__Button64Class(state["Button64"], default_state["Button64"])
	def set_event(self, event):
		self.event_data = event["event_data"]
		alias = event["alias"]
		callback_name = event["callback_name"]
		comp = getattr(self, alias)
		setattr(comp, callback_name, True)
	class __TextBox165ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox165ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox165Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox165ClassstylesClass = Atri._Atri__TextBox165ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox165ClasscustomClass = Atri._Atri__TextBox165ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox166ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox166ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox166Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox166ClassstylesClass = Atri._Atri__TextBox166ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox166ClasscustomClass = Atri._Atri__TextBox166ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox167ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox167ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox167Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox167ClassstylesClass = Atri._Atri__TextBox167ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox167ClasscustomClass = Atri._Atri__TextBox167ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Button15ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button15ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button15Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button15ClassstylesClass = Atri._Atri__Button15ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button15ClasscustomClass = Atri._Atri__Button15ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex208ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex208Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex208ClassstylesClass = Atri._Atri__Flex208ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox168ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox168ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox168Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox168ClassstylesClass = Atri._Atri__TextBox168ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox168ClasscustomClass = Atri._Atri__TextBox168ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex209ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex209Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex209ClassstylesClass = Atri._Atri__Flex209ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Menu4ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Menu4ClasscustomClass:
		def __init__(self, state, def_state):

			self.open: bool = get_defined_value(state, def_state, "open")
			self.iconHeight: int = get_defined_value(state, def_state, "iconHeight")
			self.iconWidth: int = get_defined_value(state, def_state, "iconWidth")
			self.src: str = get_defined_value(state, def_state, "src")
			self.strokeColor: str = get_defined_value(state, def_state, "strokeColor")
			self.gap: int = get_defined_value(state, def_state, "gap")
			self.alignRight: bool = get_defined_value(state, def_state, "alignRight")
	class __Menu4Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Menu4ClassstylesClass = Atri._Atri__Menu4ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Menu4ClasscustomClass = Atri._Atri__Menu4ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox169ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox169ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox169Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox169ClassstylesClass = Atri._Atri__TextBox169ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox169ClasscustomClass = Atri._Atri__TextBox169ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox171ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox171ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox171Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox171ClassstylesClass = Atri._Atri__TextBox171ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox171ClasscustomClass = Atri._Atri__TextBox171ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox172ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox172ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox172Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox172ClassstylesClass = Atri._Atri__TextBox172ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox172ClasscustomClass = Atri._Atri__TextBox172ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox173ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox173ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox173Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox173ClassstylesClass = Atri._Atri__TextBox173ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox173ClasscustomClass = Atri._Atri__TextBox173ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Button16ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button16ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button16Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button16ClassstylesClass = Atri._Atri__Button16ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button16ClasscustomClass = Atri._Atri__Button16ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex215ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex215Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex215ClassstylesClass = Atri._Atri__Flex215ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox174ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox174ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox174Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox174ClassstylesClass = Atri._Atri__TextBox174ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox174ClasscustomClass = Atri._Atri__TextBox174ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex216ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex216Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex216ClassstylesClass = Atri._Atri__Flex216ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Menu5ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Menu5ClasscustomClass:
		def __init__(self, state, def_state):

			self.open: bool = get_defined_value(state, def_state, "open")
			self.iconHeight: int = get_defined_value(state, def_state, "iconHeight")
			self.iconWidth: int = get_defined_value(state, def_state, "iconWidth")
			self.src: str = get_defined_value(state, def_state, "src")
			self.strokeColor: str = get_defined_value(state, def_state, "strokeColor")
			self.gap: int = get_defined_value(state, def_state, "gap")
			self.alignRight: bool = get_defined_value(state, def_state, "alignRight")
	class __Menu5Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Menu5ClassstylesClass = Atri._Atri__Menu5ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Menu5ClasscustomClass = Atri._Atri__Menu5ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox175ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox175ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox175Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox175ClassstylesClass = Atri._Atri__TextBox175ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox175ClasscustomClass = Atri._Atri__TextBox175ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox176ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox176ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox176Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox176ClassstylesClass = Atri._Atri__TextBox176ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox176ClasscustomClass = Atri._Atri__TextBox176ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox177ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox177ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox177Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox177ClassstylesClass = Atri._Atri__TextBox177ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox177ClasscustomClass = Atri._Atri__TextBox177ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Button17ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button17ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button17Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button17ClassstylesClass = Atri._Atri__Button17ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button17ClasscustomClass = Atri._Atri__Button17ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex220ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex220Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex220ClassstylesClass = Atri._Atri__Flex220ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox178ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox178ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox178Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox178ClassstylesClass = Atri._Atri__TextBox178ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox178ClasscustomClass = Atri._Atri__TextBox178ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex221ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex221Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex221ClassstylesClass = Atri._Atri__Flex221ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Menu6ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Menu6ClasscustomClass:
		def __init__(self, state, def_state):

			self.open: bool = get_defined_value(state, def_state, "open")
			self.iconHeight: int = get_defined_value(state, def_state, "iconHeight")
			self.iconWidth: int = get_defined_value(state, def_state, "iconWidth")
			self.src: str = get_defined_value(state, def_state, "src")
			self.strokeColor: str = get_defined_value(state, def_state, "strokeColor")
			self.gap: int = get_defined_value(state, def_state, "gap")
			self.alignRight: bool = get_defined_value(state, def_state, "alignRight")
	class __Menu6Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Menu6ClassstylesClass = Atri._Atri__Menu6ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Menu6ClasscustomClass = Atri._Atri__Menu6ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex226ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex226Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex226ClassstylesClass = Atri._Atri__Flex226ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Upload2ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Upload2ClasscustomClass:
		def __init__(self, state, def_state):

			self.multiple: bool = get_defined_value(state, def_state, "multiple")
			self.showFilename: bool = get_defined_value(state, def_state, "showFilename")
			self.text: str = get_defined_value(state, def_state, "text")
			self.disabled: bool = get_defined_value(state, def_state, "disabled")
	class __Upload2ClassioClass:
		def __init__(self):

			self.files: Optional[List[UploadFile]] = None
	class __Upload2Class:
		def __init__(self, state, def_state):
			self.onChange = False
			self.onClick = False
			self.styles: Atri.__Upload2ClassstylesClass = Atri._Atri__Upload2ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Upload2ClasscustomClass = Atri._Atri__Upload2ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
			self.io: Atri.__Upload2ClassioClass = Atri._Atri__Upload2ClassioClass()
	class __Image40ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image40ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image40Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image40ClassstylesClass = Atri._Atri__Image40ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image40ClasscustomClass = Atri._Atri__Image40ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex229ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex229Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex229ClassstylesClass = Atri._Atri__Flex229ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Image42ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image42ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image42Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image42ClassstylesClass = Atri._Atri__Image42ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image42ClasscustomClass = Atri._Atri__Image42ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox182ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox182ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox182Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox182ClassstylesClass = Atri._Atri__TextBox182ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox182ClasscustomClass = Atri._Atri__TextBox182ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image43ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image43ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image43Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image43ClassstylesClass = Atri._Atri__Image43ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image43ClasscustomClass = Atri._Atri__Image43ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex232ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex232Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex232ClassstylesClass = Atri._Atri__Flex232ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox183ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox183ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox183Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox183ClassstylesClass = Atri._Atri__TextBox183ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox183ClasscustomClass = Atri._Atri__TextBox183ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox184ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox184ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox184Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox184ClassstylesClass = Atri._Atri__TextBox184ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox184ClasscustomClass = Atri._Atri__TextBox184ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox185ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox185ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox185Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox185ClassstylesClass = Atri._Atri__TextBox185ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox185ClasscustomClass = Atri._Atri__TextBox185ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Button20ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button20ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button20Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button20ClassstylesClass = Atri._Atri__Button20ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button20ClasscustomClass = Atri._Atri__Button20ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex233ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex233Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex233ClassstylesClass = Atri._Atri__Flex233ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox186ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox186ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox186Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox186ClassstylesClass = Atri._Atri__TextBox186ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox186ClasscustomClass = Atri._Atri__TextBox186ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex234ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex234Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex234ClassstylesClass = Atri._Atri__Flex234ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Menu7ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Menu7ClasscustomClass:
		def __init__(self, state, def_state):

			self.open: bool = get_defined_value(state, def_state, "open")
			self.iconHeight: int = get_defined_value(state, def_state, "iconHeight")
			self.iconWidth: int = get_defined_value(state, def_state, "iconWidth")
			self.src: str = get_defined_value(state, def_state, "src")
			self.strokeColor: str = get_defined_value(state, def_state, "strokeColor")
			self.gap: int = get_defined_value(state, def_state, "gap")
			self.alignRight: bool = get_defined_value(state, def_state, "alignRight")
	class __Menu7Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Menu7ClassstylesClass = Atri._Atri__Menu7ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Menu7ClasscustomClass = Atri._Atri__Menu7ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox187ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox187ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox187Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox187ClassstylesClass = Atri._Atri__TextBox187ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox187ClasscustomClass = Atri._Atri__TextBox187ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox188ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox188ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox188Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox188ClassstylesClass = Atri._Atri__TextBox188ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox188ClasscustomClass = Atri._Atri__TextBox188ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox189ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox189ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox189Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox189ClassstylesClass = Atri._Atri__TextBox189ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox189ClasscustomClass = Atri._Atri__TextBox189ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Button21ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button21ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button21Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button21ClassstylesClass = Atri._Atri__Button21ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button21ClasscustomClass = Atri._Atri__Button21ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex238ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex238Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex238ClassstylesClass = Atri._Atri__Flex238ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox190ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox190ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox190Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox190ClassstylesClass = Atri._Atri__TextBox190ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox190ClasscustomClass = Atri._Atri__TextBox190ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex239ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex239Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex239ClassstylesClass = Atri._Atri__Flex239ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Menu8ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Menu8ClasscustomClass:
		def __init__(self, state, def_state):

			self.open: bool = get_defined_value(state, def_state, "open")
			self.iconHeight: int = get_defined_value(state, def_state, "iconHeight")
			self.iconWidth: int = get_defined_value(state, def_state, "iconWidth")
			self.src: str = get_defined_value(state, def_state, "src")
			self.strokeColor: str = get_defined_value(state, def_state, "strokeColor")
			self.gap: int = get_defined_value(state, def_state, "gap")
			self.alignRight: bool = get_defined_value(state, def_state, "alignRight")
	class __Menu8Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Menu8ClassstylesClass = Atri._Atri__Menu8ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Menu8ClasscustomClass = Atri._Atri__Menu8ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox191ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox191ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox191Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox191ClassstylesClass = Atri._Atri__TextBox191ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox191ClasscustomClass = Atri._Atri__TextBox191ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox192ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox192ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox192Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox192ClassstylesClass = Atri._Atri__TextBox192ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox192ClasscustomClass = Atri._Atri__TextBox192ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox193ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox193ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox193Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox193ClassstylesClass = Atri._Atri__TextBox193ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox193ClasscustomClass = Atri._Atri__TextBox193ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Button22ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button22ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button22Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button22ClassstylesClass = Atri._Atri__Button22ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button22ClasscustomClass = Atri._Atri__Button22ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex243ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex243Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex243ClassstylesClass = Atri._Atri__Flex243ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox194ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox194ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox194Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox194ClassstylesClass = Atri._Atri__TextBox194ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox194ClasscustomClass = Atri._Atri__TextBox194ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex244ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex244Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex244ClassstylesClass = Atri._Atri__Flex244ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Menu9ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Menu9ClasscustomClass:
		def __init__(self, state, def_state):

			self.open: bool = get_defined_value(state, def_state, "open")
			self.iconHeight: int = get_defined_value(state, def_state, "iconHeight")
			self.iconWidth: int = get_defined_value(state, def_state, "iconWidth")
			self.src: str = get_defined_value(state, def_state, "src")
			self.strokeColor: str = get_defined_value(state, def_state, "strokeColor")
			self.gap: int = get_defined_value(state, def_state, "gap")
			self.alignRight: bool = get_defined_value(state, def_state, "alignRight")
	class __Menu9Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Menu9ClassstylesClass = Atri._Atri__Menu9ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Menu9ClasscustomClass = Atri._Atri__Menu9ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox195ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox195ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox195Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox195ClassstylesClass = Atri._Atri__TextBox195ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox195ClasscustomClass = Atri._Atri__TextBox195ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox196ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox196ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox196Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox196ClassstylesClass = Atri._Atri__TextBox196ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox196ClasscustomClass = Atri._Atri__TextBox196ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox197ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox197ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox197Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox197ClassstylesClass = Atri._Atri__TextBox197ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox197ClasscustomClass = Atri._Atri__TextBox197ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Button23ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button23ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button23Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button23ClassstylesClass = Atri._Atri__Button23ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button23ClasscustomClass = Atri._Atri__Button23ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex248ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex248Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex248ClassstylesClass = Atri._Atri__Flex248ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox198ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox198ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox198Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox198ClassstylesClass = Atri._Atri__TextBox198ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox198ClasscustomClass = Atri._Atri__TextBox198ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex249ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex249Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex249ClassstylesClass = Atri._Atri__Flex249ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Menu10ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Menu10ClasscustomClass:
		def __init__(self, state, def_state):

			self.open: bool = get_defined_value(state, def_state, "open")
			self.iconHeight: int = get_defined_value(state, def_state, "iconHeight")
			self.iconWidth: int = get_defined_value(state, def_state, "iconWidth")
			self.src: str = get_defined_value(state, def_state, "src")
			self.strokeColor: str = get_defined_value(state, def_state, "strokeColor")
			self.gap: int = get_defined_value(state, def_state, "gap")
			self.alignRight: bool = get_defined_value(state, def_state, "alignRight")
	class __Menu10Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Menu10ClassstylesClass = Atri._Atri__Menu10ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Menu10ClasscustomClass = Atri._Atri__Menu10ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Button35ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button35ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button35Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button35ClassstylesClass = Atri._Atri__Button35ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button35ClasscustomClass = Atri._Atri__Button35ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox225ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox225ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox225Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox225ClassstylesClass = Atri._Atri__TextBox225ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox225ClasscustomClass = Atri._Atri__TextBox225ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox226ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox226ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox226Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox226ClassstylesClass = Atri._Atri__TextBox226ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox226ClasscustomClass = Atri._Atri__TextBox226ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Button36ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button36ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button36Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button36ClassstylesClass = Atri._Atri__Button36ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button36ClasscustomClass = Atri._Atri__Button36ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox227ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox227ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox227Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox227ClassstylesClass = Atri._Atri__TextBox227ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox227ClasscustomClass = Atri._Atri__TextBox227ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Button37ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button37ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button37Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button37ClassstylesClass = Atri._Atri__Button37ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button37ClasscustomClass = Atri._Atri__Button37ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox228ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox228ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox228Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox228ClassstylesClass = Atri._Atri__TextBox228ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox228ClasscustomClass = Atri._Atri__TextBox228ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Button38ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button38ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button38Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button38ClassstylesClass = Atri._Atri__Button38ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button38ClasscustomClass = Atri._Atri__Button38ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Upload5ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Upload5ClasscustomClass:
		def __init__(self, state, def_state):

			self.multiple: bool = get_defined_value(state, def_state, "multiple")
			self.showFilename: bool = get_defined_value(state, def_state, "showFilename")
			self.text: str = get_defined_value(state, def_state, "text")
			self.disabled: bool = get_defined_value(state, def_state, "disabled")
	class __Upload5ClassioClass:
		def __init__(self):

			self.files: Optional[List[UploadFile]] = None
	class __Upload5Class:
		def __init__(self, state, def_state):
			self.onChange = False
			self.onClick = False
			self.styles: Atri.__Upload5ClassstylesClass = Atri._Atri__Upload5ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Upload5ClasscustomClass = Atri._Atri__Upload5ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
			self.io: Atri.__Upload5ClassioClass = Atri._Atri__Upload5ClassioClass()
	class __Image48ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image48ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image48Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image48ClassstylesClass = Atri._Atri__Image48ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image48ClasscustomClass = Atri._Atri__Image48ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox229ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox229ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox229Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox229ClassstylesClass = Atri._Atri__TextBox229ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox229ClasscustomClass = Atri._Atri__TextBox229ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox230ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox230ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox230Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox230ClassstylesClass = Atri._Atri__TextBox230ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox230ClasscustomClass = Atri._Atri__TextBox230ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox231ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox231ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox231Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox231ClassstylesClass = Atri._Atri__TextBox231ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox231ClasscustomClass = Atri._Atri__TextBox231ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox232ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox232ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox232Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox232ClassstylesClass = Atri._Atri__TextBox232ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox232ClasscustomClass = Atri._Atri__TextBox232ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex289ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex289Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex289ClassstylesClass = Atri._Atri__Flex289ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex290ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex290Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex290ClassstylesClass = Atri._Atri__Flex290ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex291ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex291Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex291ClassstylesClass = Atri._Atri__Flex291ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex292ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex292Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex292ClassstylesClass = Atri._Atri__Flex292ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex293ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex293Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex293ClassstylesClass = Atri._Atri__Flex293ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex294ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex294Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex294ClassstylesClass = Atri._Atri__Flex294ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex295ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex295Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex295ClassstylesClass = Atri._Atri__Flex295ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Button39ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button39ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button39Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button39ClassstylesClass = Atri._Atri__Button39ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button39ClasscustomClass = Atri._Atri__Button39ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox233ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox233ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox233Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox233ClassstylesClass = Atri._Atri__TextBox233ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox233ClasscustomClass = Atri._Atri__TextBox233ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox234ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox234ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox234Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox234ClassstylesClass = Atri._Atri__TextBox234ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox234ClasscustomClass = Atri._Atri__TextBox234ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Button40ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button40ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button40Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button40ClassstylesClass = Atri._Atri__Button40ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button40ClasscustomClass = Atri._Atri__Button40ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox235ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox235ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox235Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox235ClassstylesClass = Atri._Atri__TextBox235ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox235ClasscustomClass = Atri._Atri__TextBox235ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Button41ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button41ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button41Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button41ClassstylesClass = Atri._Atri__Button41ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button41ClasscustomClass = Atri._Atri__Button41ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox236ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox236ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox236Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox236ClassstylesClass = Atri._Atri__TextBox236ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox236ClasscustomClass = Atri._Atri__TextBox236ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Button42ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button42ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button42Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button42ClassstylesClass = Atri._Atri__Button42ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button42ClasscustomClass = Atri._Atri__Button42ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Upload6ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Upload6ClasscustomClass:
		def __init__(self, state, def_state):

			self.multiple: bool = get_defined_value(state, def_state, "multiple")
			self.showFilename: bool = get_defined_value(state, def_state, "showFilename")
			self.text: str = get_defined_value(state, def_state, "text")
			self.disabled: bool = get_defined_value(state, def_state, "disabled")
	class __Upload6ClassioClass:
		def __init__(self):

			self.files: Optional[List[UploadFile]] = None
	class __Upload6Class:
		def __init__(self, state, def_state):
			self.onChange = False
			self.onClick = False
			self.styles: Atri.__Upload6ClassstylesClass = Atri._Atri__Upload6ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Upload6ClasscustomClass = Atri._Atri__Upload6ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
			self.io: Atri.__Upload6ClassioClass = Atri._Atri__Upload6ClassioClass()
	class __Image49ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image49ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image49Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image49ClassstylesClass = Atri._Atri__Image49ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image49ClasscustomClass = Atri._Atri__Image49ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox237ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox237ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox237Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox237ClassstylesClass = Atri._Atri__TextBox237ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox237ClasscustomClass = Atri._Atri__TextBox237ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox238ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox238ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox238Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox238ClassstylesClass = Atri._Atri__TextBox238ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox238ClasscustomClass = Atri._Atri__TextBox238ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox239ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox239ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox239Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox239ClassstylesClass = Atri._Atri__TextBox239ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox239ClasscustomClass = Atri._Atri__TextBox239ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox240ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox240ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox240Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox240ClassstylesClass = Atri._Atri__TextBox240ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox240ClasscustomClass = Atri._Atri__TextBox240ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex299ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex299Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex299ClassstylesClass = Atri._Atri__Flex299ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex300ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex300Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex300ClassstylesClass = Atri._Atri__Flex300ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex301ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex301Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex301ClassstylesClass = Atri._Atri__Flex301ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex302ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex302Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex302ClassstylesClass = Atri._Atri__Flex302ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex303ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex303Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex303ClassstylesClass = Atri._Atri__Flex303ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex304ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex304Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex304ClassstylesClass = Atri._Atri__Flex304ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex305ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex305Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex305ClassstylesClass = Atri._Atri__Flex305ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Button43ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button43ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button43Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button43ClassstylesClass = Atri._Atri__Button43ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button43ClasscustomClass = Atri._Atri__Button43ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox243ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox243ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox243Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox243ClassstylesClass = Atri._Atri__TextBox243ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox243ClasscustomClass = Atri._Atri__TextBox243ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox244ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox244ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox244Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox244ClassstylesClass = Atri._Atri__TextBox244ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox244ClasscustomClass = Atri._Atri__TextBox244ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Button44ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button44ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button44Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button44ClassstylesClass = Atri._Atri__Button44ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button44ClasscustomClass = Atri._Atri__Button44ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox245ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox245ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox245Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox245ClassstylesClass = Atri._Atri__TextBox245ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox245ClasscustomClass = Atri._Atri__TextBox245ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Button45ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button45ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button45Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button45ClassstylesClass = Atri._Atri__Button45ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button45ClasscustomClass = Atri._Atri__Button45ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox246ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox246ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox246Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox246ClassstylesClass = Atri._Atri__TextBox246ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox246ClasscustomClass = Atri._Atri__TextBox246ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Button46ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button46ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button46Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button46ClassstylesClass = Atri._Atri__Button46ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button46ClasscustomClass = Atri._Atri__Button46ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Upload8ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Upload8ClasscustomClass:
		def __init__(self, state, def_state):

			self.multiple: bool = get_defined_value(state, def_state, "multiple")
			self.showFilename: bool = get_defined_value(state, def_state, "showFilename")
			self.text: str = get_defined_value(state, def_state, "text")
			self.disabled: bool = get_defined_value(state, def_state, "disabled")
	class __Upload8ClassioClass:
		def __init__(self):

			self.files: Optional[List[UploadFile]] = None
	class __Upload8Class:
		def __init__(self, state, def_state):
			self.onChange = False
			self.onClick = False
			self.styles: Atri.__Upload8ClassstylesClass = Atri._Atri__Upload8ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Upload8ClasscustomClass = Atri._Atri__Upload8ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
			self.io: Atri.__Upload8ClassioClass = Atri._Atri__Upload8ClassioClass()
	class __Image51ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image51ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image51Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image51ClassstylesClass = Atri._Atri__Image51ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image51ClasscustomClass = Atri._Atri__Image51ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox247ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox247ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox247Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox247ClassstylesClass = Atri._Atri__TextBox247ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox247ClasscustomClass = Atri._Atri__TextBox247ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox248ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox248ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox248Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox248ClassstylesClass = Atri._Atri__TextBox248ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox248ClasscustomClass = Atri._Atri__TextBox248ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox249ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox249ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox249Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox249ClassstylesClass = Atri._Atri__TextBox249ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox249ClasscustomClass = Atri._Atri__TextBox249ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox250ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox250ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox250Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox250ClassstylesClass = Atri._Atri__TextBox250ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox250ClasscustomClass = Atri._Atri__TextBox250ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex313ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex313Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex313ClassstylesClass = Atri._Atri__Flex313ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex314ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex314Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex314ClassstylesClass = Atri._Atri__Flex314ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex315ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex315Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex315ClassstylesClass = Atri._Atri__Flex315ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex316ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex316Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex316ClassstylesClass = Atri._Atri__Flex316ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex317ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex317Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex317ClassstylesClass = Atri._Atri__Flex317ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex318ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex318Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex318ClassstylesClass = Atri._Atri__Flex318ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex319ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex319Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex319ClassstylesClass = Atri._Atri__Flex319ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex320ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex320Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex320ClassstylesClass = Atri._Atri__Flex320ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex321ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex321Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex321ClassstylesClass = Atri._Atri__Flex321ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox251ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox251ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox251Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox251ClassstylesClass = Atri._Atri__TextBox251ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox251ClasscustomClass = Atri._Atri__TextBox251ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex322ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex322Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex322ClassstylesClass = Atri._Atri__Flex322ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex324ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex324Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex324ClassstylesClass = Atri._Atri__Flex324ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Button56ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button56ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button56Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button56ClassstylesClass = Atri._Atri__Button56ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button56ClasscustomClass = Atri._Atri__Button56ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Button57ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button57ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button57Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button57ClassstylesClass = Atri._Atri__Button57ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button57ClasscustomClass = Atri._Atri__Button57ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Button58ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button58ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button58Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button58ClassstylesClass = Atri._Atri__Button58ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button58ClasscustomClass = Atri._Atri__Button58ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox263ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox263ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox263Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox263ClassstylesClass = Atri._Atri__TextBox263ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox263ClasscustomClass = Atri._Atri__TextBox263ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox265ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox265ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox265Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox265ClassstylesClass = Atri._Atri__TextBox265ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox265ClasscustomClass = Atri._Atri__TextBox265ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Button59ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button59ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button59Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button59ClassstylesClass = Atri._Atri__Button59ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button59ClasscustomClass = Atri._Atri__Button59ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Button60ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button60ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button60Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button60ClassstylesClass = Atri._Atri__Button60ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button60ClasscustomClass = Atri._Atri__Button60ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Button61ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button61ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button61Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button61ClassstylesClass = Atri._Atri__Button61ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button61ClasscustomClass = Atri._Atri__Button61ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox267ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox267ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox267Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox267ClassstylesClass = Atri._Atri__TextBox267ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox267ClasscustomClass = Atri._Atri__TextBox267ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Button62ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button62ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button62Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button62ClassstylesClass = Atri._Atri__Button62ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button62ClasscustomClass = Atri._Atri__Button62ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Button63ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button63ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button63Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button63ClassstylesClass = Atri._Atri__Button63ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button63ClasscustomClass = Atri._Atri__Button63ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Button64ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button64ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button64Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button64ClassstylesClass = Atri._Atri__Button64ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button64ClasscustomClass = Atri._Atri__Button64ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])